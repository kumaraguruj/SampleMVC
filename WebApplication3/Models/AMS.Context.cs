//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication3.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WebAttn_apEntities : DbContext
    {
        public WebAttn_apEntities()
            : base("name=WebAttn_apEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<aspnet_Applications> aspnet_Applications { get; set; }
        public virtual DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public virtual DbSet<aspnet_Paths> aspnet_Paths { get; set; }
        public virtual DbSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers { get; set; }
        public virtual DbSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser { get; set; }
        public virtual DbSet<aspnet_Profile> aspnet_Profile { get; set; }
        public virtual DbSet<aspnet_Roles> aspnet_Roles { get; set; }
        public virtual DbSet<aspnet_SchemaVersions> aspnet_SchemaVersions { get; set; }
        public virtual DbSet<aspnet_Users> aspnet_Users { get; set; }
        public virtual DbSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events { get; set; }
        public virtual DbSet<BUMaster> BUMasters { get; set; }
        public virtual DbSet<CategoryMaster> CategoryMasters { get; set; }
        public virtual DbSet<CompMaster> CompMasters { get; set; }
        public virtual DbSet<Datum> Data { get; set; }
        public virtual DbSet<DepartmentMaster> DepartmentMasters { get; set; }
        public virtual DbSet<DesignationMaster> DesignationMasters { get; set; }
        public virtual DbSet<DivisionMaster> DivisionMasters { get; set; }
        public virtual DbSet<dtproperty> dtproperties { get; set; }
        public virtual DbSet<EmployeeMaster> EmployeeMasters { get; set; }
        public virtual DbSet<HodMaster> HodMasters { get; set; }
        public virtual DbSet<LeaveTypeMaster> LeaveTypeMasters { get; set; }
        public virtual DbSet<LocationMaster> LocationMasters { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
        public virtual DbSet<ShiftMaster> ShiftMasters { get; set; }
        public virtual DbSet<Srlno> Srlnoes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TblIp> TblIps { get; set; }
        public virtual DbSet<BUGroupMaster> BUGroupMasters { get; set; }
        public virtual DbSet<compback> compbacks { get; set; }
        public virtual DbSet<duptest> duptests { get; set; }
        public virtual DbSet<EmailMaster> EmailMasters { get; set; }
        public virtual DbSet<empbak020215> empbak020215 { get; set; }
        public virtual DbSet<EmployeeRemark> EmployeeRemarks { get; set; }
        public virtual DbSet<EMPNEW> EMPNEWs { get; set; }
        public virtual DbSet<holidayback> holidaybacks { get; set; }
        public virtual DbSet<HolidayMaster> HolidayMasters { get; set; }
        public virtual DbSet<LeaveBalance> LeaveBalances { get; set; }
        public virtual DbSet<LeaveBalance1> LeaveBalance1 { get; set; }
        public virtual DbSet<leavebalanceback> leavebalancebacks { get; set; }
        public virtual DbSet<LeaveBalanceTable> LeaveBalanceTables { get; set; }
        public virtual DbSet<LeaveBalanceTable1> LeaveBalanceTable1 { get; set; }
        public virtual DbSet<LockMaster> LockMasters { get; set; }
        public virtual DbSet<lvbalancebackup050713> lvbalancebackup050713 { get; set; }
        public virtual DbSet<MainLeaveBalanceTable> MainLeaveBalanceTables { get; set; }
        public virtual DbSet<OHolidayMaster> OHolidayMasters { get; set; }
        public virtual DbSet<ScheduleMaster> ScheduleMasters { get; set; }
        public virtual DbSet<ScheduleMastertemp> ScheduleMastertemps { get; set; }
        public virtual DbSet<SetMaster> SetMasters { get; set; }
        public virtual DbSet<templv> templvs { get; set; }
        public virtual DbSet<TEMPPrvSchedule> TEMPPrvSchedules { get; set; }
        public virtual DbSet<tempsch> tempsches { get; set; }
        public virtual DbSet<TEMPSchedule> TEMPSchedules { get; set; }
        public virtual DbSet<tmpUser> tmpUsers { get; set; }
        public virtual DbSet<LeaveBalanceTable2> LeaveBalanceTable2 { get; set; }
        public virtual DbSet<vw_aspnet_Applications> vw_aspnet_Applications { get; set; }
        public virtual DbSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers { get; set; }
        public virtual DbSet<vw_aspnet_Profiles> vw_aspnet_Profiles { get; set; }
        public virtual DbSet<vw_aspnet_Roles> vw_aspnet_Roles { get; set; }
        public virtual DbSet<vw_aspnet_Users> vw_aspnet_Users { get; set; }
        public virtual DbSet<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRoles { get; set; }
        public virtual DbSet<vw_aspnet_WebPartState_Paths> vw_aspnet_WebPartState_Paths { get; set; }
        public virtual DbSet<vw_aspnet_WebPartState_Shared> vw_aspnet_WebPartState_Shared { get; set; }
        public virtual DbSet<vw_aspnet_WebPartState_User> vw_aspnet_WebPartState_User { get; set; }
    
        public virtual int AbsentReport(string cCardNumber, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AbsentReport", cCardNumberParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int AbsentReportCategory(string cCategorycode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AbsentReportCategory", cCategorycodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int AbsentReportDepartment(string cDepartmentcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AbsentReportDepartment", cDepartmentcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int AbsentReportDesignation(string cDesignationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AbsentReportDesignation", cDesignationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int AbsentReportDivision(string cDivisioncode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AbsentReportDivision", cDivisioncodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int AbsentReportLocation(string clocationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var clocationcodeParameter = clocationcode != null ?
                new ObjectParameter("clocationcode", clocationcode) :
                new ObjectParameter("clocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AbsentReportLocation", clocationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual ObjectResult<string> aspnet_AnyDataInTables(Nullable<int> tablesToCheck)
        {
            var tablesToCheckParameter = tablesToCheck.HasValue ?
                new ObjectParameter("TablesToCheck", tablesToCheck) :
                new ObjectParameter("TablesToCheck", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_AnyDataInTables", tablesToCheckParameter);
        }
    
        public virtual int aspnet_Applications_CreateApplication(string applicationName, ObjectParameter applicationId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Applications_CreateApplication", applicationNameParameter, applicationId);
        }
    
        public virtual int aspnet_CheckSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_CheckSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_Membership_ChangePasswordQuestionAndAnswer(string applicationName, string userName, string newPasswordQuestion, string newPasswordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordQuestionParameter = newPasswordQuestion != null ?
                new ObjectParameter("NewPasswordQuestion", newPasswordQuestion) :
                new ObjectParameter("NewPasswordQuestion", typeof(string));
    
            var newPasswordAnswerParameter = newPasswordAnswer != null ?
                new ObjectParameter("NewPasswordAnswer", newPasswordAnswer) :
                new ObjectParameter("NewPasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ChangePasswordQuestionAndAnswer", applicationNameParameter, userNameParameter, newPasswordQuestionParameter, newPasswordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_CreateUser(string applicationName, string userName, string password, string passwordSalt, string email, string passwordQuestion, string passwordAnswer, Nullable<bool> isApproved, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> createDate, Nullable<int> uniqueEmail, Nullable<int> passwordFormat, ObjectParameter userId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordQuestionParameter = passwordQuestion != null ?
                new ObjectParameter("PasswordQuestion", passwordQuestion) :
                new ObjectParameter("PasswordQuestion", typeof(string));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_CreateUser", applicationNameParameter, userNameParameter, passwordParameter, passwordSaltParameter, emailParameter, passwordQuestionParameter, passwordAnswerParameter, isApprovedParameter, currentTimeUtcParameter, createDateParameter, uniqueEmailParameter, passwordFormatParameter, userId);
        }
    
        public virtual int aspnet_Membership_FindUsersByEmail(string applicationName, string emailToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailToMatchParameter = emailToMatch != null ?
                new ObjectParameter("EmailToMatch", emailToMatch) :
                new ObjectParameter("EmailToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByEmail", applicationNameParameter, emailToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_FindUsersByName(string applicationName, string userNameToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByName", applicationNameParameter, userNameToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetAllUsers(string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetAllUsers", applicationNameParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetNumberOfUsersOnline(string applicationName, Nullable<int> minutesSinceLastInActive, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var minutesSinceLastInActiveParameter = minutesSinceLastInActive.HasValue ?
                new ObjectParameter("MinutesSinceLastInActive", minutesSinceLastInActive) :
                new ObjectParameter("MinutesSinceLastInActive", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetNumberOfUsersOnline", applicationNameParameter, minutesSinceLastInActiveParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPassword_Result> aspnet_Membership_GetPassword(string applicationName, string userName, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPassword_Result>("aspnet_Membership_GetPassword", applicationNameParameter, userNameParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, passwordAnswerParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPasswordWithFormat_Result> aspnet_Membership_GetPasswordWithFormat(string applicationName, string userName, Nullable<bool> updateLastLoginActivityDate, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPasswordWithFormat_Result>("aspnet_Membership_GetPasswordWithFormat", applicationNameParameter, userNameParameter, updateLastLoginActivityDateParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Membership_GetUserByEmail(string applicationName, string email)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Membership_GetUserByEmail", applicationNameParameter, emailParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByName_Result> aspnet_Membership_GetUserByName(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByName_Result>("aspnet_Membership_GetUserByName", applicationNameParameter, userNameParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByUserId_Result> aspnet_Membership_GetUserByUserId(Nullable<System.Guid> userId, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByUserId_Result>("aspnet_Membership_GetUserByUserId", userIdParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual int aspnet_Membership_ResetPassword(string applicationName, string userName, string newPassword, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ResetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter, passwordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_SetPassword(string applicationName, string userName, string newPassword, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_SetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter);
        }
    
        public virtual int aspnet_Membership_UnlockUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UnlockUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUser(string applicationName, string userName, string email, string comment, Nullable<bool> isApproved, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate, Nullable<int> uniqueEmail, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUser", applicationNameParameter, userNameParameter, emailParameter, commentParameter, isApprovedParameter, lastLoginDateParameter, lastActivityDateParameter, uniqueEmailParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUserInfo(string applicationName, string userName, Nullable<bool> isPasswordCorrect, Nullable<bool> updateLastLoginActivityDate, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isPasswordCorrectParameter = isPasswordCorrect.HasValue ?
                new ObjectParameter("IsPasswordCorrect", isPasswordCorrect) :
                new ObjectParameter("IsPasswordCorrect", typeof(bool));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUserInfo", applicationNameParameter, userNameParameter, isPasswordCorrectParameter, updateLastLoginActivityDateParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, lastLoginDateParameter, lastActivityDateParameter);
        }
    
        public virtual int aspnet_Paths_CreatePath(Nullable<System.Guid> applicationId, string path, ObjectParameter pathId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(System.Guid));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Paths_CreatePath", applicationIdParameter, pathParameter, pathId);
        }
    
        public virtual int aspnet_Personalization_GetApplicationId(string applicationName, ObjectParameter applicationId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Personalization_GetApplicationId", applicationNameParameter, applicationId);
        }
    
        public virtual int aspnet_PersonalizationAdministration_DeleteAllState(Nullable<bool> allUsersScope, string applicationName, ObjectParameter count)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_DeleteAllState", allUsersScopeParameter, applicationNameParameter, count);
        }
    
        public virtual int aspnet_PersonalizationAdministration_FindState(Nullable<bool> allUsersScope, string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize, string path, string userName, Nullable<System.DateTime> inactiveSinceDate)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_FindState", allUsersScopeParameter, applicationNameParameter, pageIndexParameter, pageSizeParameter, pathParameter, userNameParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_PersonalizationAdministration_GetCountOfState(Nullable<bool> allUsersScope, string applicationName, string path, string userName, Nullable<System.DateTime> inactiveSinceDate, ObjectParameter count)
        {
            var allUsersScopeParameter = allUsersScope.HasValue ?
                new ObjectParameter("AllUsersScope", allUsersScope) :
                new ObjectParameter("AllUsersScope", typeof(bool));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_GetCountOfState", allUsersScopeParameter, applicationNameParameter, pathParameter, userNameParameter, inactiveSinceDateParameter, count);
        }
    
        public virtual int aspnet_PersonalizationAdministration_ResetSharedState(string applicationName, string path, ObjectParameter count)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetSharedState", applicationNameParameter, pathParameter, count);
        }
    
        public virtual int aspnet_PersonalizationAdministration_ResetUserState(string applicationName, Nullable<System.DateTime> inactiveSinceDate, string userName, string path, ObjectParameter count)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAdministration_ResetUserState", applicationNameParameter, inactiveSinceDateParameter, userNameParameter, pathParameter, count);
        }
    
        public virtual ObjectResult<byte[]> aspnet_PersonalizationAllUsers_GetPageSettings(string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationAllUsers_GetPageSettings", applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAllUsers_ResetPageSettings(string applicationName, string path)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_ResetPageSettings", applicationNameParameter, pathParameter);
        }
    
        public virtual int aspnet_PersonalizationAllUsers_SetPageSettings(string applicationName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var pageSettingsParameter = pageSettings != null ?
                new ObjectParameter("PageSettings", pageSettings) :
                new ObjectParameter("PageSettings", typeof(byte[]));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationAllUsers_SetPageSettings", applicationNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<byte[]> aspnet_PersonalizationPerUser_GetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("aspnet_PersonalizationPerUser_GetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_PersonalizationPerUser_ResetPageSettings(string applicationName, string userName, string path, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_ResetPageSettings", applicationNameParameter, userNameParameter, pathParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_PersonalizationPerUser_SetPageSettings(string applicationName, string userName, string path, byte[] pageSettings, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var pageSettingsParameter = pageSettings != null ?
                new ObjectParameter("PageSettings", pageSettings) :
                new ObjectParameter("PageSettings", typeof(byte[]));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_PersonalizationPerUser_SetPageSettings", applicationNameParameter, userNameParameter, pathParameter, pageSettingsParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteProfiles(string applicationName, string userNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteProfiles", applicationNameParameter, userNamesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_GetNumberOfInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_GetNumberOfInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_Profile_GetProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<int> pageIndex, Nullable<int> pageSize, string userNameToMatch, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_GetProfiles", applicationNameParameter, profileAuthOptionsParameter, pageIndexParameter, pageSizeParameter, userNameToMatchParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<aspnet_Profile_GetProperties_Result> aspnet_Profile_GetProperties(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Profile_GetProperties_Result>("aspnet_Profile_GetProperties", applicationNameParameter, userNameParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Profile_SetProperties(string applicationName, string propertyNames, string propertyValuesString, byte[] propertyValuesBinary, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var propertyNamesParameter = propertyNames != null ?
                new ObjectParameter("PropertyNames", propertyNames) :
                new ObjectParameter("PropertyNames", typeof(string));
    
            var propertyValuesStringParameter = propertyValuesString != null ?
                new ObjectParameter("PropertyValuesString", propertyValuesString) :
                new ObjectParameter("PropertyValuesString", typeof(string));
    
            var propertyValuesBinaryParameter = propertyValuesBinary != null ?
                new ObjectParameter("PropertyValuesBinary", propertyValuesBinary) :
                new ObjectParameter("PropertyValuesBinary", typeof(byte[]));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_SetProperties", applicationNameParameter, propertyNamesParameter, propertyValuesStringParameter, propertyValuesBinaryParameter, userNameParameter, isUserAnonymousParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_RegisterSchemaVersion(string feature, string compatibleSchemaVersion, Nullable<bool> isCurrentVersion, Nullable<bool> removeIncompatibleSchema)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            var isCurrentVersionParameter = isCurrentVersion.HasValue ?
                new ObjectParameter("IsCurrentVersion", isCurrentVersion) :
                new ObjectParameter("IsCurrentVersion", typeof(bool));
    
            var removeIncompatibleSchemaParameter = removeIncompatibleSchema.HasValue ?
                new ObjectParameter("RemoveIncompatibleSchema", removeIncompatibleSchema) :
                new ObjectParameter("RemoveIncompatibleSchema", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_RegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter, isCurrentVersionParameter, removeIncompatibleSchemaParameter);
        }
    
        public virtual int aspnet_Roles_CreateRole(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_CreateRole", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Roles_DeleteRole(string applicationName, string roleName, Nullable<bool> deleteOnlyIfRoleIsEmpty)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var deleteOnlyIfRoleIsEmptyParameter = deleteOnlyIfRoleIsEmpty.HasValue ?
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", deleteOnlyIfRoleIsEmpty) :
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_DeleteRole", applicationNameParameter, roleNameParameter, deleteOnlyIfRoleIsEmptyParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Roles_GetAllRoles(string applicationName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Roles_GetAllRoles", applicationNameParameter);
        }
    
        public virtual int aspnet_Roles_RoleExists(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_RoleExists", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Setup_RemoveAllRoleMembers(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RemoveAllRoleMembers", nameParameter);
        }
    
        public virtual int aspnet_Setup_RestorePermissions(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RestorePermissions", nameParameter);
        }
    
        public virtual int aspnet_UnRegisterSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UnRegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_Users_CreateUser(Nullable<System.Guid> applicationId, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> lastActivityDate, ObjectParameter userId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_CreateUser", applicationIdParameter, userNameParameter, isUserAnonymousParameter, lastActivityDateParameter, userId);
        }
    
        public virtual int aspnet_Users_DeleteUser(string applicationName, string userName, Nullable<int> tablesToDeleteFrom, ObjectParameter numTablesDeletedFrom)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var tablesToDeleteFromParameter = tablesToDeleteFrom.HasValue ?
                new ObjectParameter("TablesToDeleteFrom", tablesToDeleteFrom) :
                new ObjectParameter("TablesToDeleteFrom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_DeleteUser", applicationNameParameter, userNameParameter, tablesToDeleteFromParameter, numTablesDeletedFrom);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_AddUsersToRoles(string applicationName, string userNames, string roleNames, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_AddUsersToRoles", applicationNameParameter, userNamesParameter, roleNamesParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_FindUsersInRole(string applicationName, string roleName, string userNameToMatch)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_FindUsersInRole", applicationNameParameter, roleNameParameter, userNameToMatchParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetRolesForUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetRolesForUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetUsersInRoles(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetUsersInRoles", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_UsersInRoles_IsUserInRole(string applicationName, string userName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UsersInRoles_IsUserInRole", applicationNameParameter, userNameParameter, roleNameParameter);
        }
    
        public virtual ObjectResult<aspnet_UsersInRoles_RemoveUsersFromRoles_Result> aspnet_UsersInRoles_RemoveUsersFromRoles(string applicationName, string userNames, string roleNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_UsersInRoles_RemoveUsersFromRoles_Result>("aspnet_UsersInRoles_RemoveUsersFromRoles", applicationNameParameter, userNamesParameter, roleNamesParameter);
        }
    
        public virtual int aspnet_WebEvent_LogEvent(string eventId, Nullable<System.DateTime> eventTimeUtc, Nullable<System.DateTime> eventTime, string eventType, Nullable<decimal> eventSequence, Nullable<decimal> eventOccurrence, Nullable<int> eventCode, Nullable<int> eventDetailCode, string message, string applicationPath, string applicationVirtualPath, string machineName, string requestUrl, string exceptionType, string details)
        {
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            var eventTimeUtcParameter = eventTimeUtc.HasValue ?
                new ObjectParameter("EventTimeUtc", eventTimeUtc) :
                new ObjectParameter("EventTimeUtc", typeof(System.DateTime));
    
            var eventTimeParameter = eventTime.HasValue ?
                new ObjectParameter("EventTime", eventTime) :
                new ObjectParameter("EventTime", typeof(System.DateTime));
    
            var eventTypeParameter = eventType != null ?
                new ObjectParameter("EventType", eventType) :
                new ObjectParameter("EventType", typeof(string));
    
            var eventSequenceParameter = eventSequence.HasValue ?
                new ObjectParameter("EventSequence", eventSequence) :
                new ObjectParameter("EventSequence", typeof(decimal));
    
            var eventOccurrenceParameter = eventOccurrence.HasValue ?
                new ObjectParameter("EventOccurrence", eventOccurrence) :
                new ObjectParameter("EventOccurrence", typeof(decimal));
    
            var eventCodeParameter = eventCode.HasValue ?
                new ObjectParameter("EventCode", eventCode) :
                new ObjectParameter("EventCode", typeof(int));
    
            var eventDetailCodeParameter = eventDetailCode.HasValue ?
                new ObjectParameter("EventDetailCode", eventDetailCode) :
                new ObjectParameter("EventDetailCode", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var applicationPathParameter = applicationPath != null ?
                new ObjectParameter("ApplicationPath", applicationPath) :
                new ObjectParameter("ApplicationPath", typeof(string));
    
            var applicationVirtualPathParameter = applicationVirtualPath != null ?
                new ObjectParameter("ApplicationVirtualPath", applicationVirtualPath) :
                new ObjectParameter("ApplicationVirtualPath", typeof(string));
    
            var machineNameParameter = machineName != null ?
                new ObjectParameter("MachineName", machineName) :
                new ObjectParameter("MachineName", typeof(string));
    
            var requestUrlParameter = requestUrl != null ?
                new ObjectParameter("RequestUrl", requestUrl) :
                new ObjectParameter("RequestUrl", typeof(string));
    
            var exceptionTypeParameter = exceptionType != null ?
                new ObjectParameter("ExceptionType", exceptionType) :
                new ObjectParameter("ExceptionType", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_WebEvent_LogEvent", eventIdParameter, eventTimeUtcParameter, eventTimeParameter, eventTypeParameter, eventSequenceParameter, eventOccurrenceParameter, eventCodeParameter, eventDetailCodeParameter, messageParameter, applicationPathParameter, applicationVirtualPathParameter, machineNameParameter, requestUrlParameter, exceptionTypeParameter, detailsParameter);
        }
    
        public virtual int AutoProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoProcess");
        }
    
        public virtual int CompoffReport(string cCardNumber, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompoffReport", cCardNumberParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int CompoffReportCategory(string cCategorycode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompoffReportCategory", cCategorycodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int CompoffReportDepartment(string cDepartmentcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompoffReportDepartment", cDepartmentcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int CompoffReportDesignation(string cDesignationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompoffReportDesignation", cDesignationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int CompoffReportDivision(string cDivisioncode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompoffReportDivision", cDivisioncodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int CompoffReportLocation(string clocationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var clocationcodeParameter = clocationcode != null ?
                new ObjectParameter("clocationcode", clocationcode) :
                new ObjectParameter("clocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompoffReportLocation", clocationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int Compreport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Compreport");
        }
    
        public virtual int CrTr()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrTr");
        }
    
        public virtual int DailyReport(string cCardNumber, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReport", cCardNumberParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportAverage(string cCardNumber, Nullable<System.DateTime> dtFromDate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtFromDateParameter = dtFromDate.HasValue ?
                new ObjectParameter("dtFromDate", dtFromDate) :
                new ObjectParameter("dtFromDate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportAverage", cCardNumberParameter, dtFromDateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportAverageCategory(string cCategorycode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportAverageCategory", cCategorycodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportAverageDepartment(string cDepartmentcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportAverageDepartment", cDepartmentcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportAverageDesignation(string cDesignationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportAverageDesignation", cDesignationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportAverageDivision(string cDivisioncode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportAverageDivision", cDivisioncodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportAverageLocation(string clocationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var clocationcodeParameter = clocationcode != null ?
                new ObjectParameter("clocationcode", clocationcode) :
                new ObjectParameter("clocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportAverageLocation", clocationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportCategory(string cCategorycode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportCategory", cCategorycodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportDepartment(string cDepartmentcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportDepartment", cDepartmentcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportDesignation(string cDesignationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportDesignation", cDesignationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportDivision(string cDivisioncode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportDivision", cDivisioncodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int DailyReportLocation(string clocationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var clocationcodeParameter = clocationcode != null ?
                new ObjectParameter("clocationcode", clocationcode) :
                new ObjectParameter("clocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyReportLocation", clocationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int EarlygoingReport(string cCardNumber, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EarlygoingReport", cCardNumberParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int EarlygoingReportCategory(string cCategorycode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EarlygoingReportCategory", cCategorycodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int EarlygoingReportDepartment(string cDepartmentcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EarlygoingReportDepartment", cDepartmentcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int EarlygoingReportDesignation(string cDesignationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EarlygoingReportDesignation", cDesignationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int EarlygoingReportDivision(string cDivisioncode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EarlygoingReportDivision", cDivisioncodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int EarlygoingReportLocation(string clocationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var clocationcodeParameter = clocationcode != null ?
                new ObjectParameter("clocationcode", clocationcode) :
                new ObjectParameter("clocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EarlygoingReportLocation", clocationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int EarlyGoingShiftUpdate(string cusername)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EarlyGoingShiftUpdate", cusernameParameter);
        }
    
        public virtual int EmployeeRegisterInoutReport(Nullable<System.DateTime> dtfromdate, Nullable<System.DateTime> dttoDate, string cCardNumber, string cusername)
        {
            var dtfromdateParameter = dtfromdate.HasValue ?
                new ObjectParameter("dtfromdate", dtfromdate) :
                new ObjectParameter("dtfromdate", typeof(System.DateTime));
    
            var dttoDateParameter = dttoDate.HasValue ?
                new ObjectParameter("dttoDate", dttoDate) :
                new ObjectParameter("dttoDate", typeof(System.DateTime));
    
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmployeeRegisterInoutReport", dtfromdateParameter, dttoDateParameter, cCardNumberParameter, cusernameParameter);
        }
    
        public virtual int EmployeeRegisterReport(Nullable<System.DateTime> dtfromdate, Nullable<System.DateTime> dttoDate, string cCardNumber, string cusername)
        {
            var dtfromdateParameter = dtfromdate.HasValue ?
                new ObjectParameter("dtfromdate", dtfromdate) :
                new ObjectParameter("dtfromdate", typeof(System.DateTime));
    
            var dttoDateParameter = dttoDate.HasValue ?
                new ObjectParameter("dttoDate", dttoDate) :
                new ObjectParameter("dttoDate", typeof(System.DateTime));
    
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmployeeRegisterReport", dtfromdateParameter, dttoDateParameter, cCardNumberParameter, cusernameParameter);
        }
    
        public virtual int EmployeeRegisterReportCategory(Nullable<System.DateTime> dtfromdate, Nullable<System.DateTime> dttoDate, string cCategorycode, string cCompanycode, string cusername)
        {
            var dtfromdateParameter = dtfromdate.HasValue ?
                new ObjectParameter("dtfromdate", dtfromdate) :
                new ObjectParameter("dtfromdate", typeof(System.DateTime));
    
            var dttoDateParameter = dttoDate.HasValue ?
                new ObjectParameter("dttoDate", dttoDate) :
                new ObjectParameter("dttoDate", typeof(System.DateTime));
    
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmployeeRegisterReportCategory", dtfromdateParameter, dttoDateParameter, cCategorycodeParameter, cCompanycodeParameter, cusernameParameter);
        }
    
        public virtual int EmployeeRegisterReportDepartment(Nullable<System.DateTime> dtfromdate, Nullable<System.DateTime> dttoDate, string cDepartmentcode, string cCompanycode, string cusername)
        {
            var dtfromdateParameter = dtfromdate.HasValue ?
                new ObjectParameter("dtfromdate", dtfromdate) :
                new ObjectParameter("dtfromdate", typeof(System.DateTime));
    
            var dttoDateParameter = dttoDate.HasValue ?
                new ObjectParameter("dttoDate", dttoDate) :
                new ObjectParameter("dttoDate", typeof(System.DateTime));
    
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmployeeRegisterReportDepartment", dtfromdateParameter, dttoDateParameter, cDepartmentcodeParameter, cCompanycodeParameter, cusernameParameter);
        }
    
        public virtual int EmployeeRegisterReportDesignation(Nullable<System.DateTime> dtfromdate, Nullable<System.DateTime> dttoDate, string cDesignationcode, string cCompanycode, string cusername)
        {
            var dtfromdateParameter = dtfromdate.HasValue ?
                new ObjectParameter("dtfromdate", dtfromdate) :
                new ObjectParameter("dtfromdate", typeof(System.DateTime));
    
            var dttoDateParameter = dttoDate.HasValue ?
                new ObjectParameter("dttoDate", dttoDate) :
                new ObjectParameter("dttoDate", typeof(System.DateTime));
    
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmployeeRegisterReportDesignation", dtfromdateParameter, dttoDateParameter, cDesignationcodeParameter, cCompanycodeParameter, cusernameParameter);
        }
    
        public virtual int EmployeeRegisterReportDivision(Nullable<System.DateTime> dtfromdate, Nullable<System.DateTime> dttoDate, string cDivisioncode, string cCompanycode, string cusername)
        {
            var dtfromdateParameter = dtfromdate.HasValue ?
                new ObjectParameter("dtfromdate", dtfromdate) :
                new ObjectParameter("dtfromdate", typeof(System.DateTime));
    
            var dttoDateParameter = dttoDate.HasValue ?
                new ObjectParameter("dttoDate", dttoDate) :
                new ObjectParameter("dttoDate", typeof(System.DateTime));
    
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmployeeRegisterReportDivision", dtfromdateParameter, dttoDateParameter, cDivisioncodeParameter, cCompanycodeParameter, cusernameParameter);
        }
    
        public virtual int EmployeeRegisterReportLocation(Nullable<System.DateTime> dtfromdate, Nullable<System.DateTime> dttoDate, string clocationcode, string cCompanycode, string cusername)
        {
            var dtfromdateParameter = dtfromdate.HasValue ?
                new ObjectParameter("dtfromdate", dtfromdate) :
                new ObjectParameter("dtfromdate", typeof(System.DateTime));
    
            var dttoDateParameter = dttoDate.HasValue ?
                new ObjectParameter("dttoDate", dttoDate) :
                new ObjectParameter("dttoDate", typeof(System.DateTime));
    
            var clocationcodeParameter = clocationcode != null ?
                new ObjectParameter("clocationcode", clocationcode) :
                new ObjectParameter("clocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmployeeRegisterReportLocation", dtfromdateParameter, dttoDateParameter, clocationcodeParameter, cCompanycodeParameter, cusernameParameter);
        }
    
        public virtual int ErrorReport(Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cCardNumber)
        {
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ErrorReport", dtFromdateParameter, dtTodateParameter, cCardNumberParameter);
        }
    
        public virtual ObjectResult<GetOtherUsers_Result> GetOtherUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOtherUsers_Result>("GetOtherUsers");
        }
    
        public virtual ObjectResult<Nullable<int>> GetPendingEmails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPendingEmails");
        }
    
        public virtual int LateComingReport(string cCardNumber, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LateComingReport", cCardNumberParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int LateComingReportCategory(string cCategorycode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LateComingReportCategory", cCategorycodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int LateComingReportDepartment(string cDepartmentcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LateComingReportDepartment", cDepartmentcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int LateComingReportDesignation(string cDesignationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LateComingReportDesignation", cDesignationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int LateComingReportDivision(string cDivisioncode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LateComingReportDivision", cDivisioncodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int LateComingReportLocation(string clocationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var clocationcodeParameter = clocationcode != null ?
                new ObjectParameter("clocationcode", clocationcode) :
                new ObjectParameter("clocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LateComingReportLocation", clocationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int LateComingShiftUpdate(string cusername)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LateComingShiftUpdate", cusernameParameter);
        }
    
        public virtual int LocationGrouping(string cusername)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LocationGrouping", cusernameParameter);
        }
    
        public virtual int NewInsertCommand(string cEmpCode, Nullable<System.DateTime> dtDate, string cShift_code, string cStatus, string p1, string p2, string p3, string p4, string p5, string p6, string p7, string p8, string p9, string p10, string p11, string p12, string p13, string p14, string p15, string p16, string p17, string p18, string p19, string p20, string p21, string p22, string p23, string p24, string p25, string p26, string p27, string p28, string p29, string p30, string p31, string sanction, string cUserName)
        {
            var cEmpCodeParameter = cEmpCode != null ?
                new ObjectParameter("cEmpCode", cEmpCode) :
                new ObjectParameter("cEmpCode", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var cShift_codeParameter = cShift_code != null ?
                new ObjectParameter("cShift_code", cShift_code) :
                new ObjectParameter("cShift_code", typeof(string));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            var p1Parameter = p1 != null ?
                new ObjectParameter("P1", p1) :
                new ObjectParameter("P1", typeof(string));
    
            var p2Parameter = p2 != null ?
                new ObjectParameter("P2", p2) :
                new ObjectParameter("P2", typeof(string));
    
            var p3Parameter = p3 != null ?
                new ObjectParameter("P3", p3) :
                new ObjectParameter("P3", typeof(string));
    
            var p4Parameter = p4 != null ?
                new ObjectParameter("P4", p4) :
                new ObjectParameter("P4", typeof(string));
    
            var p5Parameter = p5 != null ?
                new ObjectParameter("P5", p5) :
                new ObjectParameter("P5", typeof(string));
    
            var p6Parameter = p6 != null ?
                new ObjectParameter("P6", p6) :
                new ObjectParameter("P6", typeof(string));
    
            var p7Parameter = p7 != null ?
                new ObjectParameter("P7", p7) :
                new ObjectParameter("P7", typeof(string));
    
            var p8Parameter = p8 != null ?
                new ObjectParameter("P8", p8) :
                new ObjectParameter("P8", typeof(string));
    
            var p9Parameter = p9 != null ?
                new ObjectParameter("P9", p9) :
                new ObjectParameter("P9", typeof(string));
    
            var p10Parameter = p10 != null ?
                new ObjectParameter("P10", p10) :
                new ObjectParameter("P10", typeof(string));
    
            var p11Parameter = p11 != null ?
                new ObjectParameter("P11", p11) :
                new ObjectParameter("P11", typeof(string));
    
            var p12Parameter = p12 != null ?
                new ObjectParameter("P12", p12) :
                new ObjectParameter("P12", typeof(string));
    
            var p13Parameter = p13 != null ?
                new ObjectParameter("P13", p13) :
                new ObjectParameter("P13", typeof(string));
    
            var p14Parameter = p14 != null ?
                new ObjectParameter("P14", p14) :
                new ObjectParameter("P14", typeof(string));
    
            var p15Parameter = p15 != null ?
                new ObjectParameter("P15", p15) :
                new ObjectParameter("P15", typeof(string));
    
            var p16Parameter = p16 != null ?
                new ObjectParameter("P16", p16) :
                new ObjectParameter("P16", typeof(string));
    
            var p17Parameter = p17 != null ?
                new ObjectParameter("P17", p17) :
                new ObjectParameter("P17", typeof(string));
    
            var p18Parameter = p18 != null ?
                new ObjectParameter("P18", p18) :
                new ObjectParameter("P18", typeof(string));
    
            var p19Parameter = p19 != null ?
                new ObjectParameter("P19", p19) :
                new ObjectParameter("P19", typeof(string));
    
            var p20Parameter = p20 != null ?
                new ObjectParameter("P20", p20) :
                new ObjectParameter("P20", typeof(string));
    
            var p21Parameter = p21 != null ?
                new ObjectParameter("P21", p21) :
                new ObjectParameter("P21", typeof(string));
    
            var p22Parameter = p22 != null ?
                new ObjectParameter("P22", p22) :
                new ObjectParameter("P22", typeof(string));
    
            var p23Parameter = p23 != null ?
                new ObjectParameter("P23", p23) :
                new ObjectParameter("P23", typeof(string));
    
            var p24Parameter = p24 != null ?
                new ObjectParameter("P24", p24) :
                new ObjectParameter("P24", typeof(string));
    
            var p25Parameter = p25 != null ?
                new ObjectParameter("P25", p25) :
                new ObjectParameter("P25", typeof(string));
    
            var p26Parameter = p26 != null ?
                new ObjectParameter("P26", p26) :
                new ObjectParameter("P26", typeof(string));
    
            var p27Parameter = p27 != null ?
                new ObjectParameter("P27", p27) :
                new ObjectParameter("P27", typeof(string));
    
            var p28Parameter = p28 != null ?
                new ObjectParameter("P28", p28) :
                new ObjectParameter("P28", typeof(string));
    
            var p29Parameter = p29 != null ?
                new ObjectParameter("P29", p29) :
                new ObjectParameter("P29", typeof(string));
    
            var p30Parameter = p30 != null ?
                new ObjectParameter("P30", p30) :
                new ObjectParameter("P30", typeof(string));
    
            var p31Parameter = p31 != null ?
                new ObjectParameter("p31", p31) :
                new ObjectParameter("p31", typeof(string));
    
            var sanctionParameter = sanction != null ?
                new ObjectParameter("sanction", sanction) :
                new ObjectParameter("sanction", typeof(string));
    
            var cUserNameParameter = cUserName != null ?
                new ObjectParameter("cUserName", cUserName) :
                new ObjectParameter("cUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewInsertCommand", cEmpCodeParameter, dtDateParameter, cShift_codeParameter, cStatusParameter, p1Parameter, p2Parameter, p3Parameter, p4Parameter, p5Parameter, p6Parameter, p7Parameter, p8Parameter, p9Parameter, p10Parameter, p11Parameter, p12Parameter, p13Parameter, p14Parameter, p15Parameter, p16Parameter, p17Parameter, p18Parameter, p19Parameter, p20Parameter, p21Parameter, p22Parameter, p23Parameter, p24Parameter, p25Parameter, p26Parameter, p27Parameter, p28Parameter, p29Parameter, p30Parameter, p31Parameter, sanctionParameter, cUserNameParameter);
        }
    
        public virtual ObjectResult<NewSelectCommand_Result> NewSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewSelectCommand_Result>("NewSelectCommand");
        }
    
        public virtual int OvertimeReport(string cCardNumber, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OvertimeReport", cCardNumberParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int OvertimeReportCategory(string cCategorycode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OvertimeReportCategory", cCategorycodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int OvertimeReportDepartment(string cDepartmentcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OvertimeReportDepartment", cDepartmentcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int OvertimeReportDesignation(string cDesignationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OvertimeReportDesignation", cDesignationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int OvertimeReportDivision(string cDivisioncode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OvertimeReportDivision", cDivisioncodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int OvertimeReportLocation(string cLocationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cLocationcodeParameter = cLocationcode != null ?
                new ObjectParameter("cLocationcode", cLocationcode) :
                new ObjectParameter("cLocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OvertimeReportLocation", cLocationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int OvertimeShiftUpdate(string cusername)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OvertimeShiftUpdate", cusernameParameter);
        }
    
        public virtual int PunchesReport(string cCardNumber, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PunchesReport", cCardNumberParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int PunchesReportCategory(string cCategorycode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PunchesReportCategory", cCategorycodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int PunchesReportDepartment(string cDepartmentcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PunchesReportDepartment", cDepartmentcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int PunchesReportDesignation(string cDesignationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PunchesReportDesignation", cDesignationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int PunchesReportDivision(string cDivisioncode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PunchesReportDivision", cDivisioncodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int PunchesReportLocation(string clocationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var clocationcodeParameter = clocationcode != null ?
                new ObjectParameter("clocationcode", clocationcode) :
                new ObjectParameter("clocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PunchesReportLocation", clocationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sprocBUDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocBUDeleteSingleItem", idParameter);
        }
    
        public virtual ObjectResult<string> sprocBUDistincGroupSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sprocBUDistincGroupSelectList");
        }
    
        public virtual int sprocBUGroupDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocBUGroupDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocBUGroupInsertUpdateSingleItem(Nullable<int> id, string cBUGroupCode, string cBUCode)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cBUGroupCodeParameter = cBUGroupCode != null ?
                new ObjectParameter("cBUGroupCode", cBUGroupCode) :
                new ObjectParameter("cBUGroupCode", typeof(string));
    
            var cBUCodeParameter = cBUCode != null ?
                new ObjectParameter("cBUCode", cBUCode) :
                new ObjectParameter("cBUCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocBUGroupInsertUpdateSingleItem", idParameter, cBUGroupCodeParameter, cBUCodeParameter);
        }
    
        public virtual ObjectResult<sprocBUGroupSelectList_Result> sprocBUGroupSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocBUGroupSelectList_Result>("sprocBUGroupSelectList");
        }
    
        public virtual ObjectResult<sprocBUGroupSelectSingleItem_Result> sprocBUGroupSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocBUGroupSelectSingleItem_Result>("sprocBUGroupSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocBUInsertUpdateSingleItem(Nullable<int> id, string cBUCode, string cBUDesc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cBUCodeParameter = cBUCode != null ?
                new ObjectParameter("cBUCode", cBUCode) :
                new ObjectParameter("cBUCode", typeof(string));
    
            var cBUDescParameter = cBUDesc != null ?
                new ObjectParameter("cBUDesc", cBUDesc) :
                new ObjectParameter("cBUDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocBUInsertUpdateSingleItem", idParameter, cBUCodeParameter, cBUDescParameter);
        }
    
        public virtual ObjectResult<sprocBUSelectList_Result> sprocBUSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocBUSelectList_Result>("sprocBUSelectList");
        }
    
        public virtual ObjectResult<sprocBUSelectReportList_Result> sprocBUSelectReportList(string cusername, string cusertype)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            var cusertypeParameter = cusertype != null ?
                new ObjectParameter("cusertype", cusertype) :
                new ObjectParameter("cusertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocBUSelectReportList_Result>("sprocBUSelectReportList", cusernameParameter, cusertypeParameter);
        }
    
        public virtual ObjectResult<sprocBUSelectSingleItem_Result> sprocBUSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocBUSelectSingleItem_Result>("sprocBUSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocCategoryDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocCategoryDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocCategoryInsertUpdateSingleItem(Nullable<int> id, string cCategoryCode, string cCategoryDesc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cCategoryCodeParameter = cCategoryCode != null ?
                new ObjectParameter("cCategoryCode", cCategoryCode) :
                new ObjectParameter("cCategoryCode", typeof(string));
    
            var cCategoryDescParameter = cCategoryDesc != null ?
                new ObjectParameter("cCategoryDesc", cCategoryDesc) :
                new ObjectParameter("cCategoryDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocCategoryInsertUpdateSingleItem", idParameter, cCategoryCodeParameter, cCategoryDescParameter);
        }
    
        public virtual ObjectResult<sprocCategorySelectList_Result> sprocCategorySelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocCategorySelectList_Result>("sprocCategorySelectList");
        }
    
        public virtual ObjectResult<sproccategorySelectReportList_Result> sproccategorySelectReportList(string cusername, string cusertype)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            var cusertypeParameter = cusertype != null ?
                new ObjectParameter("cusertype", cusertype) :
                new ObjectParameter("cusertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sproccategorySelectReportList_Result>("sproccategorySelectReportList", cusernameParameter, cusertypeParameter);
        }
    
        public virtual ObjectResult<sprocCategorySelectSingleItem_Result> sprocCategorySelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocCategorySelectSingleItem_Result>("sprocCategorySelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocCompanyDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocCompanyDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocCompanyInsertUpdateSingleItem(Nullable<int> id, string cCompcode, string cCompName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cCompcodeParameter = cCompcode != null ?
                new ObjectParameter("cCompcode", cCompcode) :
                new ObjectParameter("cCompcode", typeof(string));
    
            var cCompNameParameter = cCompName != null ?
                new ObjectParameter("cCompName", cCompName) :
                new ObjectParameter("cCompName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocCompanyInsertUpdateSingleItem", idParameter, cCompcodeParameter, cCompNameParameter);
        }
    
        public virtual ObjectResult<sprocCompanySelectList_Result> sprocCompanySelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocCompanySelectList_Result>("sprocCompanySelectList");
        }
    
        public virtual ObjectResult<sprocCompanySelectReportList_Result> sprocCompanySelectReportList(string cusername, string cusertype)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            var cusertypeParameter = cusertype != null ?
                new ObjectParameter("cusertype", cusertype) :
                new ObjectParameter("cusertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocCompanySelectReportList_Result>("sprocCompanySelectReportList", cusernameParameter, cusertypeParameter);
        }
    
        public virtual ObjectResult<sprocCompanySelectSingleItem_Result> sprocCompanySelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocCompanySelectSingleItem_Result>("sprocCompanySelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocCompoffApproveSingleItem(string cCardNumber, Nullable<System.DateTime> dtDate, Nullable<System.DateTime> dtWorkDate, string cAuth)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var dtWorkDateParameter = dtWorkDate.HasValue ?
                new ObjectParameter("dtWorkDate", dtWorkDate) :
                new ObjectParameter("dtWorkDate", typeof(System.DateTime));
    
            var cAuthParameter = cAuth != null ?
                new ObjectParameter("cAuth", cAuth) :
                new ObjectParameter("cAuth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocCompoffApproveSingleItem", cCardNumberParameter, dtDateParameter, dtWorkDateParameter, cAuthParameter);
        }
    
        public virtual int sprocCompoffDeleteSingleItem(string cCardNumber, Nullable<System.DateTime> dtCoDate, Nullable<System.DateTime> dtWrkDate)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtCoDateParameter = dtCoDate.HasValue ?
                new ObjectParameter("dtCoDate", dtCoDate) :
                new ObjectParameter("dtCoDate", typeof(System.DateTime));
    
            var dtWrkDateParameter = dtWrkDate.HasValue ?
                new ObjectParameter("dtWrkDate", dtWrkDate) :
                new ObjectParameter("dtWrkDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocCompoffDeleteSingleItem", cCardNumberParameter, dtCoDateParameter, dtWrkDateParameter);
        }
    
        public virtual ObjectResult<sprocCompoffSelectEmployeeList_Result> sprocCompoffSelectEmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocCompoffSelectEmployeeList_Result>("sprocCompoffSelectEmployeeList");
        }
    
        public virtual ObjectResult<sprocCompoffSelectHodlist_Result> sprocCompoffSelectHodlist(string strcode, string emailid)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocCompoffSelectHodlist_Result>("sprocCompoffSelectHodlist", strcodeParameter, emailidParameter);
        }
    
        public virtual ObjectResult<sprocCompoffSelectSingleItem_Result> sprocCompoffSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocCompoffSelectSingleItem_Result>("sprocCompoffSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocCompoffUpdateSingleItem(string cCardNumber, Nullable<System.DateTime> dtDate, Nullable<System.DateTime> dtWorkDate, string cAuth)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var dtWorkDateParameter = dtWorkDate.HasValue ?
                new ObjectParameter("dtWorkDate", dtWorkDate) :
                new ObjectParameter("dtWorkDate", typeof(System.DateTime));
    
            var cAuthParameter = cAuth != null ?
                new ObjectParameter("cAuth", cAuth) :
                new ObjectParameter("cAuth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocCompoffUpdateSingleItem", cCardNumberParameter, dtDateParameter, dtWorkDateParameter, cAuthParameter);
        }
    
        public virtual int sprocDepartmentDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocDepartmentDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocDepartmentInsertUpdateSingleItem(Nullable<int> id, string cDepartmentCode, string cDepartmentDesc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cDepartmentCodeParameter = cDepartmentCode != null ?
                new ObjectParameter("cDepartmentCode", cDepartmentCode) :
                new ObjectParameter("cDepartmentCode", typeof(string));
    
            var cDepartmentDescParameter = cDepartmentDesc != null ?
                new ObjectParameter("cDepartmentDesc", cDepartmentDesc) :
                new ObjectParameter("cDepartmentDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocDepartmentInsertUpdateSingleItem", idParameter, cDepartmentCodeParameter, cDepartmentDescParameter);
        }
    
        public virtual ObjectResult<sprocDepartmentSelectList_Result> sprocDepartmentSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocDepartmentSelectList_Result>("sprocDepartmentSelectList");
        }
    
        public virtual ObjectResult<sprocDepartmentSelectReportList_Result> sprocDepartmentSelectReportList(string cusername, string cusertype)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            var cusertypeParameter = cusertype != null ?
                new ObjectParameter("cusertype", cusertype) :
                new ObjectParameter("cusertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocDepartmentSelectReportList_Result>("sprocDepartmentSelectReportList", cusernameParameter, cusertypeParameter);
        }
    
        public virtual ObjectResult<sprocDepartmentSelectSingleItem_Result> sprocDepartmentSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocDepartmentSelectSingleItem_Result>("sprocDepartmentSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocDesignationDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocDesignationDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocDesignationInsertUpdateSingleItem(Nullable<int> id, string cDesignationCode, string cDesignationDesc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cDesignationCodeParameter = cDesignationCode != null ?
                new ObjectParameter("cDesignationCode", cDesignationCode) :
                new ObjectParameter("cDesignationCode", typeof(string));
    
            var cDesignationDescParameter = cDesignationDesc != null ?
                new ObjectParameter("cDesignationDesc", cDesignationDesc) :
                new ObjectParameter("cDesignationDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocDesignationInsertUpdateSingleItem", idParameter, cDesignationCodeParameter, cDesignationDescParameter);
        }
    
        public virtual ObjectResult<sprocDesignationSelectList_Result> sprocDesignationSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocDesignationSelectList_Result>("sprocDesignationSelectList");
        }
    
        public virtual ObjectResult<sprocDesignationSelectReportList_Result> sprocDesignationSelectReportList(string cusername, string cusertype)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            var cusertypeParameter = cusertype != null ?
                new ObjectParameter("cusertype", cusertype) :
                new ObjectParameter("cusertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocDesignationSelectReportList_Result>("sprocDesignationSelectReportList", cusernameParameter, cusertypeParameter);
        }
    
        public virtual ObjectResult<sprocDesignationSelectSingleItem_Result> sprocDesignationSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocDesignationSelectSingleItem_Result>("sprocDesignationSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocDivisionDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocDivisionDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocDivisionInsertUpdateSingleItem(Nullable<int> id, string cDivisionCode, string cDivisionDesc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cDivisionCodeParameter = cDivisionCode != null ?
                new ObjectParameter("cDivisionCode", cDivisionCode) :
                new ObjectParameter("cDivisionCode", typeof(string));
    
            var cDivisionDescParameter = cDivisionDesc != null ?
                new ObjectParameter("cDivisionDesc", cDivisionDesc) :
                new ObjectParameter("cDivisionDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocDivisionInsertUpdateSingleItem", idParameter, cDivisionCodeParameter, cDivisionDescParameter);
        }
    
        public virtual ObjectResult<sprocDivisionSelectList_Result> sprocDivisionSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocDivisionSelectList_Result>("sprocDivisionSelectList");
        }
    
        public virtual ObjectResult<sprocDivisionSelectReportList_Result> sprocDivisionSelectReportList(string cusername, string cusertype)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            var cusertypeParameter = cusertype != null ?
                new ObjectParameter("cusertype", cusertype) :
                new ObjectParameter("cusertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocDivisionSelectReportList_Result>("sprocDivisionSelectReportList", cusernameParameter, cusertypeParameter);
        }
    
        public virtual ObjectResult<sprocDivisionSelectSingleItem_Result> sprocDivisionSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocDivisionSelectSingleItem_Result>("sprocDivisionSelectSingleItem", strcodeParameter);
        }
    
        public virtual ObjectResult<sprocEarlySelectEmployeeList_Result> sprocEarlySelectEmployeeList(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEarlySelectEmployeeList_Result>("sprocEarlySelectEmployeeList", dtFromParameter, dtToParameter);
        }
    
        public virtual ObjectResult<sprocEarlySelectSingleItem_Result> sprocEarlySelectSingleItem(string strcode, Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEarlySelectSingleItem_Result>("sprocEarlySelectSingleItem", strcodeParameter, dtFromParameter, dtToParameter);
        }
    
        public virtual int sprocEarlyUpdateSingleItem(string cPrimary, string cEarlyAuth)
        {
            var cPrimaryParameter = cPrimary != null ?
                new ObjectParameter("cPrimary", cPrimary) :
                new ObjectParameter("cPrimary", typeof(string));
    
            var cEarlyAuthParameter = cEarlyAuth != null ?
                new ObjectParameter("cEarlyAuth", cEarlyAuth) :
                new ObjectParameter("cEarlyAuth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEarlyUpdateSingleItem", cPrimaryParameter, cEarlyAuthParameter);
        }
    
        public virtual int sprocEmailDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmailDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocEmailInsertUpdateSingleItem(Nullable<int> id, string cHodCode, string cEmailDesc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cHodCodeParameter = cHodCode != null ?
                new ObjectParameter("cHodCode", cHodCode) :
                new ObjectParameter("cHodCode", typeof(string));
    
            var cEmailDescParameter = cEmailDesc != null ?
                new ObjectParameter("cEmailDesc", cEmailDesc) :
                new ObjectParameter("cEmailDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmailInsertUpdateSingleItem", idParameter, cHodCodeParameter, cEmailDescParameter);
        }
    
        public virtual ObjectResult<sprocEmailSelectList_Result> sprocEmailSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmailSelectList_Result>("sprocEmailSelectList");
        }
    
        public virtual ObjectResult<sprocEmailSelectSingleItem_Result> sprocEmailSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmailSelectSingleItem_Result>("sprocEmailSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocEmployeeDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmployeeDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocEmployeeInsertExcel(string cEmployeeCode, string cCardNumber, string cEmployeeName, string cMobileNo, Nullable<System.DateTime> dtDOB, Nullable<System.DateTime> dtDOJ, string cSex, Nullable<short> nWO1, Nullable<short> nWO2, string cCompCode, string cLocationCode, string cDepartmentCode, string cCategoryCode, string cDivisionCode, string cDesignationCode, string cEmail, string cHod, string cShift1, string cLate, string cEarly)
        {
            var cEmployeeCodeParameter = cEmployeeCode != null ?
                new ObjectParameter("cEmployeeCode", cEmployeeCode) :
                new ObjectParameter("cEmployeeCode", typeof(string));
    
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var cEmployeeNameParameter = cEmployeeName != null ?
                new ObjectParameter("cEmployeeName", cEmployeeName) :
                new ObjectParameter("cEmployeeName", typeof(string));
    
            var cMobileNoParameter = cMobileNo != null ?
                new ObjectParameter("cMobileNo", cMobileNo) :
                new ObjectParameter("cMobileNo", typeof(string));
    
            var dtDOBParameter = dtDOB.HasValue ?
                new ObjectParameter("dtDOB", dtDOB) :
                new ObjectParameter("dtDOB", typeof(System.DateTime));
    
            var dtDOJParameter = dtDOJ.HasValue ?
                new ObjectParameter("dtDOJ", dtDOJ) :
                new ObjectParameter("dtDOJ", typeof(System.DateTime));
    
            var cSexParameter = cSex != null ?
                new ObjectParameter("cSex", cSex) :
                new ObjectParameter("cSex", typeof(string));
    
            var nWO1Parameter = nWO1.HasValue ?
                new ObjectParameter("nWO1", nWO1) :
                new ObjectParameter("nWO1", typeof(short));
    
            var nWO2Parameter = nWO2.HasValue ?
                new ObjectParameter("nWO2", nWO2) :
                new ObjectParameter("nWO2", typeof(short));
    
            var cCompCodeParameter = cCompCode != null ?
                new ObjectParameter("cCompCode", cCompCode) :
                new ObjectParameter("cCompCode", typeof(string));
    
            var cLocationCodeParameter = cLocationCode != null ?
                new ObjectParameter("cLocationCode", cLocationCode) :
                new ObjectParameter("cLocationCode", typeof(string));
    
            var cDepartmentCodeParameter = cDepartmentCode != null ?
                new ObjectParameter("cDepartmentCode", cDepartmentCode) :
                new ObjectParameter("cDepartmentCode", typeof(string));
    
            var cCategoryCodeParameter = cCategoryCode != null ?
                new ObjectParameter("cCategoryCode", cCategoryCode) :
                new ObjectParameter("cCategoryCode", typeof(string));
    
            var cDivisionCodeParameter = cDivisionCode != null ?
                new ObjectParameter("cDivisionCode", cDivisionCode) :
                new ObjectParameter("cDivisionCode", typeof(string));
    
            var cDesignationCodeParameter = cDesignationCode != null ?
                new ObjectParameter("cDesignationCode", cDesignationCode) :
                new ObjectParameter("cDesignationCode", typeof(string));
    
            var cEmailParameter = cEmail != null ?
                new ObjectParameter("cEmail", cEmail) :
                new ObjectParameter("cEmail", typeof(string));
    
            var cHodParameter = cHod != null ?
                new ObjectParameter("cHod", cHod) :
                new ObjectParameter("cHod", typeof(string));
    
            var cShift1Parameter = cShift1 != null ?
                new ObjectParameter("cShift1", cShift1) :
                new ObjectParameter("cShift1", typeof(string));
    
            var cLateParameter = cLate != null ?
                new ObjectParameter("cLate", cLate) :
                new ObjectParameter("cLate", typeof(string));
    
            var cEarlyParameter = cEarly != null ?
                new ObjectParameter("cEarly", cEarly) :
                new ObjectParameter("cEarly", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmployeeInsertExcel", cEmployeeCodeParameter, cCardNumberParameter, cEmployeeNameParameter, cMobileNoParameter, dtDOBParameter, dtDOJParameter, cSexParameter, nWO1Parameter, nWO2Parameter, cCompCodeParameter, cLocationCodeParameter, cDepartmentCodeParameter, cCategoryCodeParameter, cDivisionCodeParameter, cDesignationCodeParameter, cEmailParameter, cHodParameter, cShift1Parameter, cLateParameter, cEarlyParameter);
        }
    
        public virtual int sprocEmployeeInsertUpdateSingleItem(Nullable<int> id, string cEmployeeCode, string cCardNumber, string cEmployeeName, string cPresentAddress, string cPermanantAddress, string cMobileNo, string cContactMobileNo, string cContactPerson, string cFatherspouceName, string cNationality, Nullable<System.DateTime> dtDOB, Nullable<System.DateTime> dtDOJ, Nullable<System.DateTime> dtDOL, string cSex, string cJobStatus, string cShift1, string cShift2, string cShift3, Nullable<short> nDays, Nullable<short> nWO1, Nullable<short> nWO2, Nullable<short> nWO3, Nullable<System.DateTime> dtBaseDate, string cFlexible, string cLate, string cEarly, string cOT, string cLateWOPH, string cEarlyWOPH, string cOTWOPH, string cCompCode, string cLocationCode, string cDepartmentCode, string cCategoryCode, string cDivisionCode, string cDesignationCode, string cOdd, string cMin, string cMax, Nullable<int> nMaxTime, string cFullDay, Nullable<int> nTimeOut, string cEmail, string cHod, string cHod1, Nullable<System.DateTime> dtWO)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cEmployeeCodeParameter = cEmployeeCode != null ?
                new ObjectParameter("cEmployeeCode", cEmployeeCode) :
                new ObjectParameter("cEmployeeCode", typeof(string));
    
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var cEmployeeNameParameter = cEmployeeName != null ?
                new ObjectParameter("cEmployeeName", cEmployeeName) :
                new ObjectParameter("cEmployeeName", typeof(string));
    
            var cPresentAddressParameter = cPresentAddress != null ?
                new ObjectParameter("cPresentAddress", cPresentAddress) :
                new ObjectParameter("cPresentAddress", typeof(string));
    
            var cPermanantAddressParameter = cPermanantAddress != null ?
                new ObjectParameter("cPermanantAddress", cPermanantAddress) :
                new ObjectParameter("cPermanantAddress", typeof(string));
    
            var cMobileNoParameter = cMobileNo != null ?
                new ObjectParameter("cMobileNo", cMobileNo) :
                new ObjectParameter("cMobileNo", typeof(string));
    
            var cContactMobileNoParameter = cContactMobileNo != null ?
                new ObjectParameter("cContactMobileNo", cContactMobileNo) :
                new ObjectParameter("cContactMobileNo", typeof(string));
    
            var cContactPersonParameter = cContactPerson != null ?
                new ObjectParameter("cContactPerson", cContactPerson) :
                new ObjectParameter("cContactPerson", typeof(string));
    
            var cFatherspouceNameParameter = cFatherspouceName != null ?
                new ObjectParameter("cFatherspouceName", cFatherspouceName) :
                new ObjectParameter("cFatherspouceName", typeof(string));
    
            var cNationalityParameter = cNationality != null ?
                new ObjectParameter("cNationality", cNationality) :
                new ObjectParameter("cNationality", typeof(string));
    
            var dtDOBParameter = dtDOB.HasValue ?
                new ObjectParameter("dtDOB", dtDOB) :
                new ObjectParameter("dtDOB", typeof(System.DateTime));
    
            var dtDOJParameter = dtDOJ.HasValue ?
                new ObjectParameter("dtDOJ", dtDOJ) :
                new ObjectParameter("dtDOJ", typeof(System.DateTime));
    
            var dtDOLParameter = dtDOL.HasValue ?
                new ObjectParameter("dtDOL", dtDOL) :
                new ObjectParameter("dtDOL", typeof(System.DateTime));
    
            var cSexParameter = cSex != null ?
                new ObjectParameter("cSex", cSex) :
                new ObjectParameter("cSex", typeof(string));
    
            var cJobStatusParameter = cJobStatus != null ?
                new ObjectParameter("cJobStatus", cJobStatus) :
                new ObjectParameter("cJobStatus", typeof(string));
    
            var cShift1Parameter = cShift1 != null ?
                new ObjectParameter("cShift1", cShift1) :
                new ObjectParameter("cShift1", typeof(string));
    
            var cShift2Parameter = cShift2 != null ?
                new ObjectParameter("cShift2", cShift2) :
                new ObjectParameter("cShift2", typeof(string));
    
            var cShift3Parameter = cShift3 != null ?
                new ObjectParameter("cShift3", cShift3) :
                new ObjectParameter("cShift3", typeof(string));
    
            var nDaysParameter = nDays.HasValue ?
                new ObjectParameter("nDays", nDays) :
                new ObjectParameter("nDays", typeof(short));
    
            var nWO1Parameter = nWO1.HasValue ?
                new ObjectParameter("nWO1", nWO1) :
                new ObjectParameter("nWO1", typeof(short));
    
            var nWO2Parameter = nWO2.HasValue ?
                new ObjectParameter("nWO2", nWO2) :
                new ObjectParameter("nWO2", typeof(short));
    
            var nWO3Parameter = nWO3.HasValue ?
                new ObjectParameter("nWO3", nWO3) :
                new ObjectParameter("nWO3", typeof(short));
    
            var dtBaseDateParameter = dtBaseDate.HasValue ?
                new ObjectParameter("dtBaseDate", dtBaseDate) :
                new ObjectParameter("dtBaseDate", typeof(System.DateTime));
    
            var cFlexibleParameter = cFlexible != null ?
                new ObjectParameter("cFlexible", cFlexible) :
                new ObjectParameter("cFlexible", typeof(string));
    
            var cLateParameter = cLate != null ?
                new ObjectParameter("cLate", cLate) :
                new ObjectParameter("cLate", typeof(string));
    
            var cEarlyParameter = cEarly != null ?
                new ObjectParameter("cEarly", cEarly) :
                new ObjectParameter("cEarly", typeof(string));
    
            var cOTParameter = cOT != null ?
                new ObjectParameter("cOT", cOT) :
                new ObjectParameter("cOT", typeof(string));
    
            var cLateWOPHParameter = cLateWOPH != null ?
                new ObjectParameter("cLateWOPH", cLateWOPH) :
                new ObjectParameter("cLateWOPH", typeof(string));
    
            var cEarlyWOPHParameter = cEarlyWOPH != null ?
                new ObjectParameter("cEarlyWOPH", cEarlyWOPH) :
                new ObjectParameter("cEarlyWOPH", typeof(string));
    
            var cOTWOPHParameter = cOTWOPH != null ?
                new ObjectParameter("cOTWOPH", cOTWOPH) :
                new ObjectParameter("cOTWOPH", typeof(string));
    
            var cCompCodeParameter = cCompCode != null ?
                new ObjectParameter("cCompCode", cCompCode) :
                new ObjectParameter("cCompCode", typeof(string));
    
            var cLocationCodeParameter = cLocationCode != null ?
                new ObjectParameter("cLocationCode", cLocationCode) :
                new ObjectParameter("cLocationCode", typeof(string));
    
            var cDepartmentCodeParameter = cDepartmentCode != null ?
                new ObjectParameter("cDepartmentCode", cDepartmentCode) :
                new ObjectParameter("cDepartmentCode", typeof(string));
    
            var cCategoryCodeParameter = cCategoryCode != null ?
                new ObjectParameter("cCategoryCode", cCategoryCode) :
                new ObjectParameter("cCategoryCode", typeof(string));
    
            var cDivisionCodeParameter = cDivisionCode != null ?
                new ObjectParameter("cDivisionCode", cDivisionCode) :
                new ObjectParameter("cDivisionCode", typeof(string));
    
            var cDesignationCodeParameter = cDesignationCode != null ?
                new ObjectParameter("cDesignationCode", cDesignationCode) :
                new ObjectParameter("cDesignationCode", typeof(string));
    
            var cOddParameter = cOdd != null ?
                new ObjectParameter("cOdd", cOdd) :
                new ObjectParameter("cOdd", typeof(string));
    
            var cMinParameter = cMin != null ?
                new ObjectParameter("cMin", cMin) :
                new ObjectParameter("cMin", typeof(string));
    
            var cMaxParameter = cMax != null ?
                new ObjectParameter("cMax", cMax) :
                new ObjectParameter("cMax", typeof(string));
    
            var nMaxTimeParameter = nMaxTime.HasValue ?
                new ObjectParameter("nMaxTime", nMaxTime) :
                new ObjectParameter("nMaxTime", typeof(int));
    
            var cFullDayParameter = cFullDay != null ?
                new ObjectParameter("cFullDay", cFullDay) :
                new ObjectParameter("cFullDay", typeof(string));
    
            var nTimeOutParameter = nTimeOut.HasValue ?
                new ObjectParameter("nTimeOut", nTimeOut) :
                new ObjectParameter("nTimeOut", typeof(int));
    
            var cEmailParameter = cEmail != null ?
                new ObjectParameter("cEmail", cEmail) :
                new ObjectParameter("cEmail", typeof(string));
    
            var cHodParameter = cHod != null ?
                new ObjectParameter("cHod", cHod) :
                new ObjectParameter("cHod", typeof(string));
    
            var cHod1Parameter = cHod1 != null ?
                new ObjectParameter("cHod1", cHod1) :
                new ObjectParameter("cHod1", typeof(string));
    
            var dtWOParameter = dtWO.HasValue ?
                new ObjectParameter("dtWO", dtWO) :
                new ObjectParameter("dtWO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmployeeInsertUpdateSingleItem", idParameter, cEmployeeCodeParameter, cCardNumberParameter, cEmployeeNameParameter, cPresentAddressParameter, cPermanantAddressParameter, cMobileNoParameter, cContactMobileNoParameter, cContactPersonParameter, cFatherspouceNameParameter, cNationalityParameter, dtDOBParameter, dtDOJParameter, dtDOLParameter, cSexParameter, cJobStatusParameter, cShift1Parameter, cShift2Parameter, cShift3Parameter, nDaysParameter, nWO1Parameter, nWO2Parameter, nWO3Parameter, dtBaseDateParameter, cFlexibleParameter, cLateParameter, cEarlyParameter, cOTParameter, cLateWOPHParameter, cEarlyWOPHParameter, cOTWOPHParameter, cCompCodeParameter, cLocationCodeParameter, cDepartmentCodeParameter, cCategoryCodeParameter, cDivisionCodeParameter, cDesignationCodeParameter, cOddParameter, cMinParameter, cMaxParameter, nMaxTimeParameter, cFullDayParameter, nTimeOutParameter, cEmailParameter, cHodParameter, cHod1Parameter, dtWOParameter);
        }
    
        public virtual int sprocEmployeeRemarksInsertUpdateSingleItem(Nullable<int> id, Nullable<System.DateTime> dtDate, string cCardNumber, string cUserName, string cRemarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var cUserNameParameter = cUserName != null ?
                new ObjectParameter("cUserName", cUserName) :
                new ObjectParameter("cUserName", typeof(string));
    
            var cRemarksParameter = cRemarks != null ?
                new ObjectParameter("cRemarks", cRemarks) :
                new ObjectParameter("cRemarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmployeeRemarksInsertUpdateSingleItem", idParameter, dtDateParameter, cCardNumberParameter, cUserNameParameter, cRemarksParameter);
        }
    
        public virtual ObjectResult<sprocEmployeeRemarksSelectSingleItem_Result> sprocEmployeeRemarksSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeRemarksSelectSingleItem_Result>("sprocEmployeeRemarksSelectSingleItem", strcodeParameter);
        }
    
        public virtual ObjectResult<sprocEmployeeSelectBalnkemailList_Result> sprocEmployeeSelectBalnkemailList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeSelectBalnkemailList_Result>("sprocEmployeeSelectBalnkemailList");
        }
    
        public virtual ObjectResult<sprocEmployeeSelectBulkUserListemp_Result> sprocEmployeeSelectBulkUserListemp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeSelectBulkUserListemp_Result>("sprocEmployeeSelectBulkUserListemp");
        }
    
        public virtual ObjectResult<sprocEmployeeSelectList_Result> sprocEmployeeSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeSelectList_Result>("sprocEmployeeSelectList");
        }
    
        public virtual ObjectResult<sprocEmployeeSelectReportList_Result> sprocEmployeeSelectReportList(string cusername, string cusertype, string compcode)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            var cusertypeParameter = cusertype != null ?
                new ObjectParameter("cusertype", cusertype) :
                new ObjectParameter("cusertype", typeof(string));
    
            var compcodeParameter = compcode != null ?
                new ObjectParameter("compcode", compcode) :
                new ObjectParameter("compcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeSelectReportList_Result>("sprocEmployeeSelectReportList", cusernameParameter, cusertypeParameter, compcodeParameter);
        }
    
        public virtual ObjectResult<sprocEmployeeSelectReportListemp_Result> sprocEmployeeSelectReportListemp(string cusername, string cusertype)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            var cusertypeParameter = cusertype != null ?
                new ObjectParameter("cusertype", cusertype) :
                new ObjectParameter("cusertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeSelectReportListemp_Result>("sprocEmployeeSelectReportListemp", cusernameParameter, cusertypeParameter);
        }
    
        public virtual ObjectResult<sprocEmployeeSelectSingleidItem_Result> sprocEmployeeSelectSingleidItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeSelectSingleidItem_Result>("sprocEmployeeSelectSingleidItem", idParameter);
        }
    
        public virtual ObjectResult<sprocEmployeeSelectSingleItem_Result> sprocEmployeeSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeSelectSingleItem_Result>("sprocEmployeeSelectSingleItem", strcodeParameter);
        }
    
        public virtual ObjectResult<sprocEmployeeSelectTeamListemp_Result> sprocEmployeeSelectTeamListemp(string cusername)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeSelectTeamListemp_Result>("sprocEmployeeSelectTeamListemp", cusernameParameter);
        }
    
        public virtual ObjectResult<sprocEmployeeSelecttReportManagerListemp_Result> sprocEmployeeSelecttReportManagerListemp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocEmployeeSelecttReportManagerListemp_Result>("sprocEmployeeSelecttReportManagerListemp");
        }
    
        public virtual int sprocEmployeeUpdateExcel(string cEmployeeCode, string cMobileNo, Nullable<System.DateTime> dtDOB, Nullable<System.DateTime> dtDOJ, Nullable<System.DateTime> dtDOL, string cSex, Nullable<short> nWO1, Nullable<short> nWO2, string cCompCode, string cLocationCode, string cDepartmentCode, string cCategoryCode, string cDivisionCode, string cDesignationCode, string cEmail, string cHod, string cHod1, string cShift1, string cLate, string cEarly)
        {
            var cEmployeeCodeParameter = cEmployeeCode != null ?
                new ObjectParameter("cEmployeeCode", cEmployeeCode) :
                new ObjectParameter("cEmployeeCode", typeof(string));
    
            var cMobileNoParameter = cMobileNo != null ?
                new ObjectParameter("cMobileNo", cMobileNo) :
                new ObjectParameter("cMobileNo", typeof(string));
    
            var dtDOBParameter = dtDOB.HasValue ?
                new ObjectParameter("dtDOB", dtDOB) :
                new ObjectParameter("dtDOB", typeof(System.DateTime));
    
            var dtDOJParameter = dtDOJ.HasValue ?
                new ObjectParameter("dtDOJ", dtDOJ) :
                new ObjectParameter("dtDOJ", typeof(System.DateTime));
    
            var dtDOLParameter = dtDOL.HasValue ?
                new ObjectParameter("dtDOL", dtDOL) :
                new ObjectParameter("dtDOL", typeof(System.DateTime));
    
            var cSexParameter = cSex != null ?
                new ObjectParameter("cSex", cSex) :
                new ObjectParameter("cSex", typeof(string));
    
            var nWO1Parameter = nWO1.HasValue ?
                new ObjectParameter("nWO1", nWO1) :
                new ObjectParameter("nWO1", typeof(short));
    
            var nWO2Parameter = nWO2.HasValue ?
                new ObjectParameter("nWO2", nWO2) :
                new ObjectParameter("nWO2", typeof(short));
    
            var cCompCodeParameter = cCompCode != null ?
                new ObjectParameter("cCompCode", cCompCode) :
                new ObjectParameter("cCompCode", typeof(string));
    
            var cLocationCodeParameter = cLocationCode != null ?
                new ObjectParameter("cLocationCode", cLocationCode) :
                new ObjectParameter("cLocationCode", typeof(string));
    
            var cDepartmentCodeParameter = cDepartmentCode != null ?
                new ObjectParameter("cDepartmentCode", cDepartmentCode) :
                new ObjectParameter("cDepartmentCode", typeof(string));
    
            var cCategoryCodeParameter = cCategoryCode != null ?
                new ObjectParameter("cCategoryCode", cCategoryCode) :
                new ObjectParameter("cCategoryCode", typeof(string));
    
            var cDivisionCodeParameter = cDivisionCode != null ?
                new ObjectParameter("cDivisionCode", cDivisionCode) :
                new ObjectParameter("cDivisionCode", typeof(string));
    
            var cDesignationCodeParameter = cDesignationCode != null ?
                new ObjectParameter("cDesignationCode", cDesignationCode) :
                new ObjectParameter("cDesignationCode", typeof(string));
    
            var cEmailParameter = cEmail != null ?
                new ObjectParameter("cEmail", cEmail) :
                new ObjectParameter("cEmail", typeof(string));
    
            var cHodParameter = cHod != null ?
                new ObjectParameter("cHod", cHod) :
                new ObjectParameter("cHod", typeof(string));
    
            var cHod1Parameter = cHod1 != null ?
                new ObjectParameter("cHod1", cHod1) :
                new ObjectParameter("cHod1", typeof(string));
    
            var cShift1Parameter = cShift1 != null ?
                new ObjectParameter("cShift1", cShift1) :
                new ObjectParameter("cShift1", typeof(string));
    
            var cLateParameter = cLate != null ?
                new ObjectParameter("cLate", cLate) :
                new ObjectParameter("cLate", typeof(string));
    
            var cEarlyParameter = cEarly != null ?
                new ObjectParameter("cEarly", cEarly) :
                new ObjectParameter("cEarly", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmployeeUpdateExcel", cEmployeeCodeParameter, cMobileNoParameter, dtDOBParameter, dtDOJParameter, dtDOLParameter, cSexParameter, nWO1Parameter, nWO2Parameter, cCompCodeParameter, cLocationCodeParameter, cDepartmentCodeParameter, cCategoryCodeParameter, cDivisionCodeParameter, cDesignationCodeParameter, cEmailParameter, cHodParameter, cHod1Parameter, cShift1Parameter, cLateParameter, cEarlyParameter);
        }
    
        public virtual int sprocEmployeeUpdateManager(string cEmployeeCode, string cHod, string cHod1)
        {
            var cEmployeeCodeParameter = cEmployeeCode != null ?
                new ObjectParameter("cEmployeeCode", cEmployeeCode) :
                new ObjectParameter("cEmployeeCode", typeof(string));
    
            var cHodParameter = cHod != null ?
                new ObjectParameter("cHod", cHod) :
                new ObjectParameter("cHod", typeof(string));
    
            var cHod1Parameter = cHod1 != null ?
                new ObjectParameter("cHod1", cHod1) :
                new ObjectParameter("cHod1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmployeeUpdateManager", cEmployeeCodeParameter, cHodParameter, cHod1Parameter);
        }
    
        public virtual int sprocEmployeeUpdateWO(string cEmployeeCode, Nullable<short> nWO1, Nullable<short> nWO2, Nullable<short> nWO3, Nullable<System.DateTime> dtWO)
        {
            var cEmployeeCodeParameter = cEmployeeCode != null ?
                new ObjectParameter("cEmployeeCode", cEmployeeCode) :
                new ObjectParameter("cEmployeeCode", typeof(string));
    
            var nWO1Parameter = nWO1.HasValue ?
                new ObjectParameter("nWO1", nWO1) :
                new ObjectParameter("nWO1", typeof(short));
    
            var nWO2Parameter = nWO2.HasValue ?
                new ObjectParameter("nWO2", nWO2) :
                new ObjectParameter("nWO2", typeof(short));
    
            var nWO3Parameter = nWO3.HasValue ?
                new ObjectParameter("nWO3", nWO3) :
                new ObjectParameter("nWO3", typeof(short));
    
            var dtWOParameter = dtWO.HasValue ?
                new ObjectParameter("dtWO", dtWO) :
                new ObjectParameter("dtWO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmployeeUpdateWO", cEmployeeCodeParameter, nWO1Parameter, nWO2Parameter, nWO3Parameter, dtWOParameter);
        }
    
        public virtual int sprocEmployeeUserSelectReportList(string cEmail)
        {
            var cEmailParameter = cEmail != null ?
                new ObjectParameter("cEmail", cEmail) :
                new ObjectParameter("cEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmployeeUserSelectReportList", cEmailParameter);
        }
    
        public virtual int sprocEmpReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocEmpReport");
        }
    
        public virtual int sprocHodAllView(string proEmpcode)
        {
            var proEmpcodeParameter = proEmpcode != null ?
                new ObjectParameter("proEmpcode", proEmpcode) :
                new ObjectParameter("proEmpcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocHodAllView", proEmpcodeParameter);
        }
    
        public virtual int sprocHodDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocHodDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocHodInsertUpdateSingleItem(Nullable<int> id, string cHodCode, string cHodDesc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cHodCodeParameter = cHodCode != null ?
                new ObjectParameter("cHodCode", cHodCode) :
                new ObjectParameter("cHodCode", typeof(string));
    
            var cHodDescParameter = cHodDesc != null ?
                new ObjectParameter("cHodDesc", cHodDesc) :
                new ObjectParameter("cHodDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocHodInsertUpdateSingleItem", idParameter, cHodCodeParameter, cHodDescParameter);
        }
    
        public virtual ObjectResult<sprocHodSelectList_Result> sprocHodSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocHodSelectList_Result>("sprocHodSelectList");
        }
    
        public virtual ObjectResult<sprocHodSelectSingleItem_Result> sprocHodSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocHodSelectSingleItem_Result>("sprocHodSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocHolidayDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocHolidayDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocHolidayInsertUpdateSingleItem(Nullable<int> id, string cHolidayCode, string cStatusCode, string cHolidayDesc, Nullable<System.DateTime> dtDate, string cLocationCode, string cBUCode)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cHolidayCodeParameter = cHolidayCode != null ?
                new ObjectParameter("cHolidayCode", cHolidayCode) :
                new ObjectParameter("cHolidayCode", typeof(string));
    
            var cStatusCodeParameter = cStatusCode != null ?
                new ObjectParameter("cStatusCode", cStatusCode) :
                new ObjectParameter("cStatusCode", typeof(string));
    
            var cHolidayDescParameter = cHolidayDesc != null ?
                new ObjectParameter("cHolidayDesc", cHolidayDesc) :
                new ObjectParameter("cHolidayDesc", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var cLocationCodeParameter = cLocationCode != null ?
                new ObjectParameter("cLocationCode", cLocationCode) :
                new ObjectParameter("cLocationCode", typeof(string));
    
            var cBUCodeParameter = cBUCode != null ?
                new ObjectParameter("cBUCode", cBUCode) :
                new ObjectParameter("cBUCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocHolidayInsertUpdateSingleItem", idParameter, cHolidayCodeParameter, cStatusCodeParameter, cHolidayDescParameter, dtDateParameter, cLocationCodeParameter, cBUCodeParameter);
        }
    
        public virtual ObjectResult<sprocHolidaySelectList_Result> sprocHolidaySelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocHolidaySelectList_Result>("sprocHolidaySelectList");
        }
    
        public virtual ObjectResult<sprocHolidaySelectSingleItem_Result> sprocHolidaySelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocHolidaySelectSingleItem_Result>("sprocHolidaySelectSingleItem", strcodeParameter);
        }
    
        public virtual ObjectResult<sprocLateSelectEmployeeList_Result> sprocLateSelectEmployeeList(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLateSelectEmployeeList_Result>("sprocLateSelectEmployeeList", dtFromParameter, dtToParameter);
        }
    
        public virtual ObjectResult<sprocLateSelectSingleItem_Result> sprocLateSelectSingleItem(string strcode, Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLateSelectSingleItem_Result>("sprocLateSelectSingleItem", strcodeParameter, dtFromParameter, dtToParameter);
        }
    
        public virtual int sprocLateUpdateSingleItem(string cPrimary, string cLateAuth)
        {
            var cPrimaryParameter = cPrimary != null ?
                new ObjectParameter("cPrimary", cPrimary) :
                new ObjectParameter("cPrimary", typeof(string));
    
            var cLateAuthParameter = cLateAuth != null ?
                new ObjectParameter("cLateAuth", cLateAuth) :
                new ObjectParameter("cLateAuth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLateUpdateSingleItem", cPrimaryParameter, cLateAuthParameter);
        }
    
        public virtual int sprocLeaveApplicationApproveSingleItem(string cCardNumber, Nullable<System.DateTime> dtfromDate, Nullable<System.DateTime> dttoDate, Nullable<System.DateTime> dthalfDate, string cStatus, string cComments)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromDateParameter = dtfromDate.HasValue ?
                new ObjectParameter("dtfromDate", dtfromDate) :
                new ObjectParameter("dtfromDate", typeof(System.DateTime));
    
            var dttoDateParameter = dttoDate.HasValue ?
                new ObjectParameter("dttoDate", dttoDate) :
                new ObjectParameter("dttoDate", typeof(System.DateTime));
    
            var dthalfDateParameter = dthalfDate.HasValue ?
                new ObjectParameter("dthalfDate", dthalfDate) :
                new ObjectParameter("dthalfDate", typeof(System.DateTime));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            var cCommentsParameter = cComments != null ?
                new ObjectParameter("cComments", cComments) :
                new ObjectParameter("cComments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveApplicationApproveSingleItem", cCardNumberParameter, dtfromDateParameter, dttoDateParameter, dthalfDateParameter, cStatusParameter, cCommentsParameter);
        }
    
        public virtual int sprocLeaveApplicationCancelSingleItem(string cCardNumber, Nullable<System.DateTime> dtfromDate, Nullable<System.DateTime> dttoDate, Nullable<System.DateTime> dthalfDate, string cStatus)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromDateParameter = dtfromDate.HasValue ?
                new ObjectParameter("dtfromDate", dtfromDate) :
                new ObjectParameter("dtfromDate", typeof(System.DateTime));
    
            var dttoDateParameter = dttoDate.HasValue ?
                new ObjectParameter("dttoDate", dttoDate) :
                new ObjectParameter("dttoDate", typeof(System.DateTime));
    
            var dthalfDateParameter = dthalfDate.HasValue ?
                new ObjectParameter("dthalfDate", dthalfDate) :
                new ObjectParameter("dthalfDate", typeof(System.DateTime));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveApplicationCancelSingleItem", cCardNumberParameter, dtfromDateParameter, dttoDateParameter, dthalfDateParameter, cStatusParameter);
        }
    
        public virtual int sprocLeaveApplicationDeleteSingleItem(string cCardNumber, Nullable<System.DateTime> dtDate, string chalfFull)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var chalfFullParameter = chalfFull != null ?
                new ObjectParameter("chalfFull", chalfFull) :
                new ObjectParameter("chalfFull", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveApplicationDeleteSingleItem", cCardNumberParameter, dtDateParameter, chalfFullParameter);
        }
    
        public virtual int sprocLeaveApplicationLock(Nullable<System.DateTime> dtsetfrom, Nullable<System.DateTime> dtsetTo)
        {
            var dtsetfromParameter = dtsetfrom.HasValue ?
                new ObjectParameter("dtsetfrom", dtsetfrom) :
                new ObjectParameter("dtsetfrom", typeof(System.DateTime));
    
            var dtsetToParameter = dtsetTo.HasValue ?
                new ObjectParameter("dtsetTo", dtsetTo) :
                new ObjectParameter("dtsetTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveApplicationLock", dtsetfromParameter, dtsetToParameter);
        }
    
        public virtual ObjectResult<sprocLeaveApplicationSelectEmployeeList_Result> sprocLeaveApplicationSelectEmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLeaveApplicationSelectEmployeeList_Result>("sprocLeaveApplicationSelectEmployeeList");
        }
    
        public virtual ObjectResult<sprocLeaveApplicationSelectHodlist_Result> sprocLeaveApplicationSelectHodlist(string strcode, string emailid)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLeaveApplicationSelectHodlist_Result>("sprocLeaveApplicationSelectHodlist", strcodeParameter, emailidParameter);
        }
    
        public virtual ObjectResult<sprocLeaveApplicationSelectSingleItem_Result> sprocLeaveApplicationSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLeaveApplicationSelectSingleItem_Result>("sprocLeaveApplicationSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocLeaveApplicationUpdateSingleItem(string cCardNumber, Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtTo, Nullable<System.DateTime> dtHalfDate, Nullable<decimal> nDays, string cLeaveTypecode, string cfullhalf, string cStatus, string cReason, string cComments, string cInclude, string cEmailIDs)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromParameter = dtfrom.HasValue ?
                new ObjectParameter("dtfrom", dtfrom) :
                new ObjectParameter("dtfrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var dtHalfDateParameter = dtHalfDate.HasValue ?
                new ObjectParameter("dtHalfDate", dtHalfDate) :
                new ObjectParameter("dtHalfDate", typeof(System.DateTime));
    
            var nDaysParameter = nDays.HasValue ?
                new ObjectParameter("nDays", nDays) :
                new ObjectParameter("nDays", typeof(decimal));
    
            var cLeaveTypecodeParameter = cLeaveTypecode != null ?
                new ObjectParameter("cLeaveTypecode", cLeaveTypecode) :
                new ObjectParameter("cLeaveTypecode", typeof(string));
    
            var cfullhalfParameter = cfullhalf != null ?
                new ObjectParameter("cfullhalf", cfullhalf) :
                new ObjectParameter("cfullhalf", typeof(string));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            var cReasonParameter = cReason != null ?
                new ObjectParameter("cReason", cReason) :
                new ObjectParameter("cReason", typeof(string));
    
            var cCommentsParameter = cComments != null ?
                new ObjectParameter("cComments", cComments) :
                new ObjectParameter("cComments", typeof(string));
    
            var cIncludeParameter = cInclude != null ?
                new ObjectParameter("cInclude", cInclude) :
                new ObjectParameter("cInclude", typeof(string));
    
            var cEmailIDsParameter = cEmailIDs != null ?
                new ObjectParameter("cEmailIDs", cEmailIDs) :
                new ObjectParameter("cEmailIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveApplicationUpdateSingleItem", cCardNumberParameter, dtfromParameter, dtToParameter, dtHalfDateParameter, nDaysParameter, cLeaveTypecodeParameter, cfullhalfParameter, cStatusParameter, cReasonParameter, cCommentsParameter, cIncludeParameter, cEmailIDsParameter);
        }
    
        public virtual int sprocLeaveBalanceAlter()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveBalanceAlter");
        }
    
        public virtual int sprocLeaveBalanceExcel(string cCardNumber, Nullable<System.DateTime> dtDate, Nullable<decimal> nPLBalance, Nullable<decimal> nACCBalance)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var nPLBalanceParameter = nPLBalance.HasValue ?
                new ObjectParameter("nPLBalance", nPLBalance) :
                new ObjectParameter("nPLBalance", typeof(decimal));
    
            var nACCBalanceParameter = nACCBalance.HasValue ?
                new ObjectParameter("nACCBalance", nACCBalance) :
                new ObjectParameter("nACCBalance", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveBalanceExcel", cCardNumberParameter, dtDateParameter, nPLBalanceParameter, nACCBalanceParameter);
        }
    
        public virtual ObjectResult<sprocLeaveBalanceView_Result> sprocLeaveBalanceView(string cCardNumber)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLeaveBalanceView_Result>("sprocLeaveBalanceView", cCardNumberParameter);
        }
    
        public virtual int sprocLeaveEncash(string cCardNumber, string cUserName)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var cUserNameParameter = cUserName != null ?
                new ObjectParameter("cUserName", cUserName) :
                new ObjectParameter("cUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveEncash", cCardNumberParameter, cUserNameParameter);
        }
    
        public virtual int sprocLeaveProcess(string cCardNumber, string cUserName, Nullable<System.DateTime> dtDate, string cType)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var cUserNameParameter = cUserName != null ?
                new ObjectParameter("cUserName", cUserName) :
                new ObjectParameter("cUserName", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var cTypeParameter = cType != null ?
                new ObjectParameter("cType", cType) :
                new ObjectParameter("cType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveProcess", cCardNumberParameter, cUserNameParameter, dtDateParameter, cTypeParameter);
        }
    
        public virtual int sprocLeaveProcess_backup(string cCardNumber, string cUserName, Nullable<System.DateTime> dtDate, string cType)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var cUserNameParameter = cUserName != null ?
                new ObjectParameter("cUserName", cUserName) :
                new ObjectParameter("cUserName", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var cTypeParameter = cType != null ?
                new ObjectParameter("cType", cType) :
                new ObjectParameter("cType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveProcess_backup", cCardNumberParameter, cUserNameParameter, dtDateParameter, cTypeParameter);
        }
    
        public virtual int sprocLeaveTypeDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveTypeDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocLeaveTypeInsertUpdateSingleItem(Nullable<int> id, string cLeaveTypeCode, string cLeaveTypeDesc, string cPaid, string cCarry, string cCredit, string cCategory)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cLeaveTypeCodeParameter = cLeaveTypeCode != null ?
                new ObjectParameter("cLeaveTypeCode", cLeaveTypeCode) :
                new ObjectParameter("cLeaveTypeCode", typeof(string));
    
            var cLeaveTypeDescParameter = cLeaveTypeDesc != null ?
                new ObjectParameter("cLeaveTypeDesc", cLeaveTypeDesc) :
                new ObjectParameter("cLeaveTypeDesc", typeof(string));
    
            var cPaidParameter = cPaid != null ?
                new ObjectParameter("cPaid", cPaid) :
                new ObjectParameter("cPaid", typeof(string));
    
            var cCarryParameter = cCarry != null ?
                new ObjectParameter("cCarry", cCarry) :
                new ObjectParameter("cCarry", typeof(string));
    
            var cCreditParameter = cCredit != null ?
                new ObjectParameter("cCredit", cCredit) :
                new ObjectParameter("cCredit", typeof(string));
    
            var cCategoryParameter = cCategory != null ?
                new ObjectParameter("cCategory", cCategory) :
                new ObjectParameter("cCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLeaveTypeInsertUpdateSingleItem", idParameter, cLeaveTypeCodeParameter, cLeaveTypeDescParameter, cPaidParameter, cCarryParameter, cCreditParameter, cCategoryParameter);
        }
    
        public virtual ObjectResult<sprocLeaveTypeSelectList_Result> sprocLeaveTypeSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLeaveTypeSelectList_Result>("sprocLeaveTypeSelectList");
        }
    
        public virtual ObjectResult<sprocLeaveTypeSelectListNew_Result> sprocLeaveTypeSelectListNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLeaveTypeSelectListNew_Result>("sprocLeaveTypeSelectListNew");
        }
    
        public virtual ObjectResult<sprocLeaveTypeSelectSingleItem_Result> sprocLeaveTypeSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLeaveTypeSelectSingleItem_Result>("sprocLeaveTypeSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocLocationDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLocationDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocLocationInsertUpdateSingleItem(Nullable<int> id, string cLocationCode, string cLocationDesc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cLocationCodeParameter = cLocationCode != null ?
                new ObjectParameter("cLocationCode", cLocationCode) :
                new ObjectParameter("cLocationCode", typeof(string));
    
            var cLocationDescParameter = cLocationDesc != null ?
                new ObjectParameter("cLocationDesc", cLocationDesc) :
                new ObjectParameter("cLocationDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLocationInsertUpdateSingleItem", idParameter, cLocationCodeParameter, cLocationDescParameter);
        }
    
        public virtual ObjectResult<sprocLocationSelectList_Result> sprocLocationSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLocationSelectList_Result>("sprocLocationSelectList");
        }
    
        public virtual ObjectResult<sprocLocationSelectReportList_Result> sprocLocationSelectReportList(string cusername, string cusertype)
        {
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            var cusertypeParameter = cusertype != null ?
                new ObjectParameter("cusertype", cusertype) :
                new ObjectParameter("cusertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLocationSelectReportList_Result>("sprocLocationSelectReportList", cusernameParameter, cusertypeParameter);
        }
    
        public virtual ObjectResult<sprocLocationSelectSingleItem_Result> sprocLocationSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLocationSelectSingleItem_Result>("sprocLocationSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocLockMasterDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLockMasterDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocLockMasterInsertUpdateSingleItem(Nullable<int> id, string cYYMM, Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtTo, string cLock)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cYYMMParameter = cYYMM != null ?
                new ObjectParameter("cYYMM", cYYMM) :
                new ObjectParameter("cYYMM", typeof(string));
    
            var dtfromParameter = dtfrom.HasValue ?
                new ObjectParameter("dtfrom", dtfrom) :
                new ObjectParameter("dtfrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var cLockParameter = cLock != null ?
                new ObjectParameter("cLock", cLock) :
                new ObjectParameter("cLock", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocLockMasterInsertUpdateSingleItem", idParameter, cYYMMParameter, dtfromParameter, dtToParameter, cLockParameter);
        }
    
        public virtual ObjectResult<sprocLockMasterSelectList_Result> sprocLockMasterSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLockMasterSelectList_Result>("sprocLockMasterSelectList");
        }
    
        public virtual ObjectResult<sprocLockMasterSelectSingleidItem_Result> sprocLockMasterSelectSingleidItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLockMasterSelectSingleidItem_Result>("sprocLockMasterSelectSingleidItem", idParameter);
        }
    
        public virtual ObjectResult<sprocLockMasterSelectSingleItem_Result> sprocLockMasterSelectSingleItem(Nullable<System.DateTime> strcode)
        {
            var strcodeParameter = strcode.HasValue ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocLockMasterSelectSingleItem_Result>("sprocLockMasterSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocMainProcess(Nullable<System.DateTime> dtfromdate, Nullable<System.DateTime> dttodate, string proEmpcode)
        {
            var dtfromdateParameter = dtfromdate.HasValue ?
                new ObjectParameter("dtfromdate", dtfromdate) :
                new ObjectParameter("dtfromdate", typeof(System.DateTime));
    
            var dttodateParameter = dttodate.HasValue ?
                new ObjectParameter("dttodate", dttodate) :
                new ObjectParameter("dttodate", typeof(System.DateTime));
    
            var proEmpcodeParameter = proEmpcode != null ?
                new ObjectParameter("proEmpcode", proEmpcode) :
                new ObjectParameter("proEmpcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocMainProcess", dtfromdateParameter, dttodateParameter, proEmpcodeParameter);
        }
    
        public virtual int sprocMainProcess_bk(Nullable<System.DateTime> dtfromdate, Nullable<System.DateTime> dttodate, string proEmpcode)
        {
            var dtfromdateParameter = dtfromdate.HasValue ?
                new ObjectParameter("dtfromdate", dtfromdate) :
                new ObjectParameter("dtfromdate", typeof(System.DateTime));
    
            var dttodateParameter = dttodate.HasValue ?
                new ObjectParameter("dttodate", dttodate) :
                new ObjectParameter("dttodate", typeof(System.DateTime));
    
            var proEmpcodeParameter = proEmpcode != null ?
                new ObjectParameter("proEmpcode", proEmpcode) :
                new ObjectParameter("proEmpcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocMainProcess_bk", dtfromdateParameter, dttodateParameter, proEmpcodeParameter);
        }
    
        public virtual int sprocManualPunchesDeleteSingleItem(string cCardNumber, Nullable<System.DateTime> dtDate, Nullable<int> tmmn)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var tmmnParameter = tmmn.HasValue ?
                new ObjectParameter("tmmn", tmmn) :
                new ObjectParameter("tmmn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocManualPunchesDeleteSingleItem", cCardNumberParameter, dtDateParameter, tmmnParameter);
        }
    
        public virtual ObjectResult<sprocManualPunchesSelectEmployeeList_Result> sprocManualPunchesSelectEmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocManualPunchesSelectEmployeeList_Result>("sprocManualPunchesSelectEmployeeList");
        }
    
        public virtual ObjectResult<sprocManualPunchesSelectSingleItem_Result> sprocManualPunchesSelectSingleItem(string strcode, Nullable<System.DateTime> dtDate)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocManualPunchesSelectSingleItem_Result>("sprocManualPunchesSelectSingleItem", strcodeParameter, dtDateParameter);
        }
    
        public virtual int sprocManualPunchesUpdateSingleItem(string cAttendanceCode, string cFlag, Nullable<int> nTmmn, string cTmhh, Nullable<System.DateTime> dtDate, string entered, Nullable<System.DateTime> dtPunchDate)
        {
            var cAttendanceCodeParameter = cAttendanceCode != null ?
                new ObjectParameter("cAttendanceCode", cAttendanceCode) :
                new ObjectParameter("cAttendanceCode", typeof(string));
    
            var cFlagParameter = cFlag != null ?
                new ObjectParameter("cFlag", cFlag) :
                new ObjectParameter("cFlag", typeof(string));
    
            var nTmmnParameter = nTmmn.HasValue ?
                new ObjectParameter("nTmmn", nTmmn) :
                new ObjectParameter("nTmmn", typeof(int));
    
            var cTmhhParameter = cTmhh != null ?
                new ObjectParameter("cTmhh", cTmhh) :
                new ObjectParameter("cTmhh", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var enteredParameter = entered != null ?
                new ObjectParameter("entered", entered) :
                new ObjectParameter("entered", typeof(string));
    
            var dtPunchDateParameter = dtPunchDate.HasValue ?
                new ObjectParameter("dtPunchDate", dtPunchDate) :
                new ObjectParameter("dtPunchDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocManualPunchesUpdateSingleItem", cAttendanceCodeParameter, cFlagParameter, nTmmnParameter, cTmhhParameter, dtDateParameter, enteredParameter, dtPunchDateParameter);
        }
    
        public virtual ObjectResult<sprocManualScheduleSelectEmployeeList_Result> sprocManualScheduleSelectEmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocManualScheduleSelectEmployeeList_Result>("sprocManualScheduleSelectEmployeeList");
        }
    
        public virtual ObjectResult<sprocManualScheduleSelectSingleItem_Result> sprocManualScheduleSelectSingleItem(string strcode, Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtto)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var dtfromParameter = dtfrom.HasValue ?
                new ObjectParameter("dtfrom", dtfrom) :
                new ObjectParameter("dtfrom", typeof(System.DateTime));
    
            var dttoParameter = dtto.HasValue ?
                new ObjectParameter("dtto", dtto) :
                new ObjectParameter("dtto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocManualScheduleSelectSingleItem_Result>("sprocManualScheduleSelectSingleItem", strcodeParameter, dtfromParameter, dttoParameter);
        }
    
        public virtual int sprocOHolidayDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocOHolidayDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocOHolidayInsertUpdateSingleItem(Nullable<int> id, string cHolidayCode, string cStatusCode, string cHolidayDesc, Nullable<System.DateTime> dtDate, string cLocationCode, string cBUCode)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cHolidayCodeParameter = cHolidayCode != null ?
                new ObjectParameter("cHolidayCode", cHolidayCode) :
                new ObjectParameter("cHolidayCode", typeof(string));
    
            var cStatusCodeParameter = cStatusCode != null ?
                new ObjectParameter("cStatusCode", cStatusCode) :
                new ObjectParameter("cStatusCode", typeof(string));
    
            var cHolidayDescParameter = cHolidayDesc != null ?
                new ObjectParameter("cHolidayDesc", cHolidayDesc) :
                new ObjectParameter("cHolidayDesc", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var cLocationCodeParameter = cLocationCode != null ?
                new ObjectParameter("cLocationCode", cLocationCode) :
                new ObjectParameter("cLocationCode", typeof(string));
    
            var cBUCodeParameter = cBUCode != null ?
                new ObjectParameter("cBUCode", cBUCode) :
                new ObjectParameter("cBUCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocOHolidayInsertUpdateSingleItem", idParameter, cHolidayCodeParameter, cStatusCodeParameter, cHolidayDescParameter, dtDateParameter, cLocationCodeParameter, cBUCodeParameter);
        }
    
        public virtual ObjectResult<sprocOHolidaySelectList_Result> sprocOHolidaySelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocOHolidaySelectList_Result>("sprocOHolidaySelectList");
        }
    
        public virtual ObjectResult<sprocOHolidaySelectSingleItem_Result> sprocOHolidaySelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocOHolidaySelectSingleItem_Result>("sprocOHolidaySelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocOnsiteDeleteSingleItem(string cCardNumber, Nullable<System.DateTime> dtDate, string chalfFull)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            var chalfFullParameter = chalfFull != null ?
                new ObjectParameter("chalfFull", chalfFull) :
                new ObjectParameter("chalfFull", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocOnsiteDeleteSingleItem", cCardNumberParameter, dtDateParameter, chalfFullParameter);
        }
    
        public virtual ObjectResult<sprocOnsiteSelectSingleItem_Result> sprocOnsiteSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocOnsiteSelectSingleItem_Result>("sprocOnsiteSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocOnsiteUpdateSingleItem(string cCardNumber, Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtTo, string cLeaveTypecode, string cReason)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromParameter = dtfrom.HasValue ?
                new ObjectParameter("dtfrom", dtfrom) :
                new ObjectParameter("dtfrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var cLeaveTypecodeParameter = cLeaveTypecode != null ?
                new ObjectParameter("cLeaveTypecode", cLeaveTypecode) :
                new ObjectParameter("cLeaveTypecode", typeof(string));
    
            var cReasonParameter = cReason != null ?
                new ObjectParameter("cReason", cReason) :
                new ObjectParameter("cReason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocOnsiteUpdateSingleItem", cCardNumberParameter, dtfromParameter, dtToParameter, cLeaveTypecodeParameter, cReasonParameter);
        }
    
        public virtual int SprocOptionalHoliday(Nullable<System.DateTime> dtFromdate, string cusername)
        {
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SprocOptionalHoliday", dtFromdateParameter, cusernameParameter);
        }
    
        public virtual int sprocOptionalHolidayApproveSingleItem(string cCardNumber, Nullable<System.DateTime> dtfromDate, string cStatus)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromDateParameter = dtfromDate.HasValue ?
                new ObjectParameter("dtfromDate", dtfromDate) :
                new ObjectParameter("dtfromDate", typeof(System.DateTime));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocOptionalHolidayApproveSingleItem", cCardNumberParameter, dtfromDateParameter, cStatusParameter);
        }
    
        public virtual int sprocOptionalHolidayDeleteSingleItem(string cCardNumber, Nullable<System.DateTime> dtDate)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocOptionalHolidayDeleteSingleItem", cCardNumberParameter, dtDateParameter);
        }
    
        public virtual int sprocOptionalHolidaySaveSingleItem(string cCardNumber, Nullable<System.DateTime> dtfrom, string cLeaveTypecode, string cStatus)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromParameter = dtfrom.HasValue ?
                new ObjectParameter("dtfrom", dtfrom) :
                new ObjectParameter("dtfrom", typeof(System.DateTime));
    
            var cLeaveTypecodeParameter = cLeaveTypecode != null ?
                new ObjectParameter("cLeaveTypecode", cLeaveTypecode) :
                new ObjectParameter("cLeaveTypecode", typeof(string));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocOptionalHolidaySaveSingleItem", cCardNumberParameter, dtfromParameter, cLeaveTypecodeParameter, cStatusParameter);
        }
    
        public virtual ObjectResult<sprocOptionalHolidaySelectEmployeeList_Result> sprocOptionalHolidaySelectEmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocOptionalHolidaySelectEmployeeList_Result>("sprocOptionalHolidaySelectEmployeeList");
        }
    
        public virtual ObjectResult<sprocOptionalHolidaySelectHodlist_Result> sprocOptionalHolidaySelectHodlist(string strcode, string emailid)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocOptionalHolidaySelectHodlist_Result>("sprocOptionalHolidaySelectHodlist", strcodeParameter, emailidParameter);
        }
    
        public virtual ObjectResult<sprocOptionalHolidaySelectSingleItem_Result> sprocOptionalHolidaySelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocOptionalHolidaySelectSingleItem_Result>("sprocOptionalHolidaySelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocOptionalHolidayUpdateSingleItem(string cCardNumber, Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtTo, Nullable<System.DateTime> dtChangeDate)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromParameter = dtfrom.HasValue ?
                new ObjectParameter("dtfrom", dtfrom) :
                new ObjectParameter("dtfrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var dtChangeDateParameter = dtChangeDate.HasValue ?
                new ObjectParameter("dtChangeDate", dtChangeDate) :
                new ObjectParameter("dtChangeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocOptionalHolidayUpdateSingleItem", cCardNumberParameter, dtfromParameter, dtToParameter, dtChangeDateParameter);
        }
    
        public virtual ObjectResult<sprocOvertimeSelectEmployeeList_Result> sprocOvertimeSelectEmployeeList(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocOvertimeSelectEmployeeList_Result>("sprocOvertimeSelectEmployeeList", dtFromParameter, dtToParameter);
        }
    
        public virtual ObjectResult<sprocOvertimeSelectSingleItem_Result> sprocOvertimeSelectSingleItem(string strcode, Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocOvertimeSelectSingleItem_Result>("sprocOvertimeSelectSingleItem", strcodeParameter, dtFromParameter, dtToParameter);
        }
    
        public virtual int sprocOvertimeUpdateSingleItem(string cPrimary, string cOvertimeAuth)
        {
            var cPrimaryParameter = cPrimary != null ?
                new ObjectParameter("cPrimary", cPrimary) :
                new ObjectParameter("cPrimary", typeof(string));
    
            var cOvertimeAuthParameter = cOvertimeAuth != null ?
                new ObjectParameter("cOvertimeAuth", cOvertimeAuth) :
                new ObjectParameter("cOvertimeAuth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocOvertimeUpdateSingleItem", cPrimaryParameter, cOvertimeAuthParameter);
        }
    
        public virtual ObjectResult<sprocProcessEmployeeList_Result> sprocProcessEmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocProcessEmployeeList_Result>("sprocProcessEmployeeList");
        }
    
        public virtual int sprocScheduleMaster(string cCardNumber, Nullable<int> nodays, Nullable<int> nMonth, Nullable<int> nyear)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var nodaysParameter = nodays.HasValue ?
                new ObjectParameter("nodays", nodays) :
                new ObjectParameter("nodays", typeof(int));
    
            var nMonthParameter = nMonth.HasValue ?
                new ObjectParameter("nMonth", nMonth) :
                new ObjectParameter("nMonth", typeof(int));
    
            var nyearParameter = nyear.HasValue ?
                new ObjectParameter("nyear", nyear) :
                new ObjectParameter("nyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocScheduleMaster", cCardNumberParameter, nodaysParameter, nMonthParameter, nyearParameter);
        }
    
        public virtual int sprocScheduleMasterSaveSingleItem(string cEmpcode, string cShiftCode, Nullable<System.DateTime> dtDate)
        {
            var cEmpcodeParameter = cEmpcode != null ?
                new ObjectParameter("cEmpcode", cEmpcode) :
                new ObjectParameter("cEmpcode", typeof(string));
    
            var cShiftCodeParameter = cShiftCode != null ?
                new ObjectParameter("cShiftCode", cShiftCode) :
                new ObjectParameter("cShiftCode", typeof(string));
    
            var dtDateParameter = dtDate.HasValue ?
                new ObjectParameter("dtDate", dtDate) :
                new ObjectParameter("dtDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocScheduleMasterSaveSingleItem", cEmpcodeParameter, cShiftCodeParameter, dtDateParameter);
        }
    
        public virtual int sprocScheduleMastertest(string cCardNumber, Nullable<int> nodays)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var nodaysParameter = nodays.HasValue ?
                new ObjectParameter("nodays", nodays) :
                new ObjectParameter("nodays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocScheduleMastertest", cCardNumberParameter, nodaysParameter);
        }
    
        public virtual ObjectResult<sprocScheduleSelectEmployeeList_Result> sprocScheduleSelectEmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocScheduleSelectEmployeeList_Result>("sprocScheduleSelectEmployeeList");
        }
    
        public virtual ObjectResult<sprocScheduleSelectSingleItem_Result> sprocScheduleSelectSingleItem(string strcode, string dtMonth, string dtYear)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var dtMonthParameter = dtMonth != null ?
                new ObjectParameter("dtMonth", dtMonth) :
                new ObjectParameter("dtMonth", typeof(string));
    
            var dtYearParameter = dtYear != null ?
                new ObjectParameter("dtYear", dtYear) :
                new ObjectParameter("dtYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocScheduleSelectSingleItem_Result>("sprocScheduleSelectSingleItem", strcodeParameter, dtMonthParameter, dtYearParameter);
        }
    
        public virtual int sprocScheduleUpdateSingleItem(string cPrimary, string cShiftCode)
        {
            var cPrimaryParameter = cPrimary != null ?
                new ObjectParameter("cPrimary", cPrimary) :
                new ObjectParameter("cPrimary", typeof(string));
    
            var cShiftCodeParameter = cShiftCode != null ?
                new ObjectParameter("cShiftCode", cShiftCode) :
                new ObjectParameter("cShiftCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocScheduleUpdateSingleItem", cPrimaryParameter, cShiftCodeParameter);
        }
    
        public virtual int sprocSetMasterDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocSetMasterDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocSetMasterInsertUpdateSingleItem(Nullable<int> id, Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtTo, string cActive, string cWO, Nullable<int> nFullDay, Nullable<int> nHalfDay, Nullable<int> nAbsent, Nullable<decimal> nLeaveEligible, Nullable<decimal> nLeaveGrace)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dtfromParameter = dtfrom.HasValue ?
                new ObjectParameter("dtfrom", dtfrom) :
                new ObjectParameter("dtfrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var cActiveParameter = cActive != null ?
                new ObjectParameter("cActive", cActive) :
                new ObjectParameter("cActive", typeof(string));
    
            var cWOParameter = cWO != null ?
                new ObjectParameter("cWO", cWO) :
                new ObjectParameter("cWO", typeof(string));
    
            var nFullDayParameter = nFullDay.HasValue ?
                new ObjectParameter("nFullDay", nFullDay) :
                new ObjectParameter("nFullDay", typeof(int));
    
            var nHalfDayParameter = nHalfDay.HasValue ?
                new ObjectParameter("nHalfDay", nHalfDay) :
                new ObjectParameter("nHalfDay", typeof(int));
    
            var nAbsentParameter = nAbsent.HasValue ?
                new ObjectParameter("nAbsent", nAbsent) :
                new ObjectParameter("nAbsent", typeof(int));
    
            var nLeaveEligibleParameter = nLeaveEligible.HasValue ?
                new ObjectParameter("nLeaveEligible", nLeaveEligible) :
                new ObjectParameter("nLeaveEligible", typeof(decimal));
    
            var nLeaveGraceParameter = nLeaveGrace.HasValue ?
                new ObjectParameter("nLeaveGrace", nLeaveGrace) :
                new ObjectParameter("nLeaveGrace", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocSetMasterInsertUpdateSingleItem", idParameter, dtfromParameter, dtToParameter, cActiveParameter, cWOParameter, nFullDayParameter, nHalfDayParameter, nAbsentParameter, nLeaveEligibleParameter, nLeaveGraceParameter);
        }
    
        public virtual ObjectResult<sprocSetMasterSelectList_Result> sprocSetMasterSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocSetMasterSelectList_Result>("sprocSetMasterSelectList");
        }
    
        public virtual ObjectResult<sprocSetMasterSelectSingleidItem_Result> sprocSetMasterSelectSingleidItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocSetMasterSelectSingleidItem_Result>("sprocSetMasterSelectSingleidItem", idParameter);
        }
    
        public virtual ObjectResult<sprocSetMasterSelectSingleItem_Result> sprocSetMasterSelectSingleItem(Nullable<System.DateTime> strcode)
        {
            var strcodeParameter = strcode.HasValue ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocSetMasterSelectSingleItem_Result>("sprocSetMasterSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocShiftDeleteSingleItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocShiftDeleteSingleItem", idParameter);
        }
    
        public virtual int sprocShiftInsertUpdateSingleItem(Nullable<int> id, string cShiftCode, string cShiftDesc, string cTotalHrs, string cTotalSwipe, string cTotalFixed, Nullable<int> cTotalFixedValue, string cTotalLHrs, string cTotalLSwipe, string cTotalLFixed, Nullable<int> cTotalLFixedValue, Nullable<int> nShiftStart, Nullable<int> nShiftEnd, Nullable<int> nLunchStart, Nullable<int> nLunchEnd, Nullable<int> nGraceIn, Nullable<int> nGraceOut, Nullable<int> nBefore, Nullable<int> nAfter, Nullable<int> nOTBefore, Nullable<int> nOTAfter, string cLocationCode)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cShiftCodeParameter = cShiftCode != null ?
                new ObjectParameter("cShiftCode", cShiftCode) :
                new ObjectParameter("cShiftCode", typeof(string));
    
            var cShiftDescParameter = cShiftDesc != null ?
                new ObjectParameter("cShiftDesc", cShiftDesc) :
                new ObjectParameter("cShiftDesc", typeof(string));
    
            var cTotalHrsParameter = cTotalHrs != null ?
                new ObjectParameter("cTotalHrs", cTotalHrs) :
                new ObjectParameter("cTotalHrs", typeof(string));
    
            var cTotalSwipeParameter = cTotalSwipe != null ?
                new ObjectParameter("cTotalSwipe", cTotalSwipe) :
                new ObjectParameter("cTotalSwipe", typeof(string));
    
            var cTotalFixedParameter = cTotalFixed != null ?
                new ObjectParameter("cTotalFixed", cTotalFixed) :
                new ObjectParameter("cTotalFixed", typeof(string));
    
            var cTotalFixedValueParameter = cTotalFixedValue.HasValue ?
                new ObjectParameter("cTotalFixedValue", cTotalFixedValue) :
                new ObjectParameter("cTotalFixedValue", typeof(int));
    
            var cTotalLHrsParameter = cTotalLHrs != null ?
                new ObjectParameter("cTotalLHrs", cTotalLHrs) :
                new ObjectParameter("cTotalLHrs", typeof(string));
    
            var cTotalLSwipeParameter = cTotalLSwipe != null ?
                new ObjectParameter("cTotalLSwipe", cTotalLSwipe) :
                new ObjectParameter("cTotalLSwipe", typeof(string));
    
            var cTotalLFixedParameter = cTotalLFixed != null ?
                new ObjectParameter("cTotalLFixed", cTotalLFixed) :
                new ObjectParameter("cTotalLFixed", typeof(string));
    
            var cTotalLFixedValueParameter = cTotalLFixedValue.HasValue ?
                new ObjectParameter("cTotalLFixedValue", cTotalLFixedValue) :
                new ObjectParameter("cTotalLFixedValue", typeof(int));
    
            var nShiftStartParameter = nShiftStart.HasValue ?
                new ObjectParameter("nShiftStart", nShiftStart) :
                new ObjectParameter("nShiftStart", typeof(int));
    
            var nShiftEndParameter = nShiftEnd.HasValue ?
                new ObjectParameter("nShiftEnd", nShiftEnd) :
                new ObjectParameter("nShiftEnd", typeof(int));
    
            var nLunchStartParameter = nLunchStart.HasValue ?
                new ObjectParameter("nLunchStart", nLunchStart) :
                new ObjectParameter("nLunchStart", typeof(int));
    
            var nLunchEndParameter = nLunchEnd.HasValue ?
                new ObjectParameter("nLunchEnd", nLunchEnd) :
                new ObjectParameter("nLunchEnd", typeof(int));
    
            var nGraceInParameter = nGraceIn.HasValue ?
                new ObjectParameter("nGraceIn", nGraceIn) :
                new ObjectParameter("nGraceIn", typeof(int));
    
            var nGraceOutParameter = nGraceOut.HasValue ?
                new ObjectParameter("nGraceOut", nGraceOut) :
                new ObjectParameter("nGraceOut", typeof(int));
    
            var nBeforeParameter = nBefore.HasValue ?
                new ObjectParameter("nBefore", nBefore) :
                new ObjectParameter("nBefore", typeof(int));
    
            var nAfterParameter = nAfter.HasValue ?
                new ObjectParameter("nAfter", nAfter) :
                new ObjectParameter("nAfter", typeof(int));
    
            var nOTBeforeParameter = nOTBefore.HasValue ?
                new ObjectParameter("nOTBefore", nOTBefore) :
                new ObjectParameter("nOTBefore", typeof(int));
    
            var nOTAfterParameter = nOTAfter.HasValue ?
                new ObjectParameter("nOTAfter", nOTAfter) :
                new ObjectParameter("nOTAfter", typeof(int));
    
            var cLocationCodeParameter = cLocationCode != null ?
                new ObjectParameter("cLocationCode", cLocationCode) :
                new ObjectParameter("cLocationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocShiftInsertUpdateSingleItem", idParameter, cShiftCodeParameter, cShiftDescParameter, cTotalHrsParameter, cTotalSwipeParameter, cTotalFixedParameter, cTotalFixedValueParameter, cTotalLHrsParameter, cTotalLSwipeParameter, cTotalLFixedParameter, cTotalLFixedValueParameter, nShiftStartParameter, nShiftEndParameter, nLunchStartParameter, nLunchEndParameter, nGraceInParameter, nGraceOutParameter, nBeforeParameter, nAfterParameter, nOTBeforeParameter, nOTAfterParameter, cLocationCodeParameter);
        }
    
        public virtual ObjectResult<sprocShiftSelectItemLocation_Result> sprocShiftSelectItemLocation(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocShiftSelectItemLocation_Result>("sprocShiftSelectItemLocation", strcodeParameter);
        }
    
        public virtual ObjectResult<sprocShiftSelectList_Result> sprocShiftSelectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocShiftSelectList_Result>("sprocShiftSelectList");
        }
    
        public virtual ObjectResult<sprocShiftSelectSingleidItem_Result> sprocShiftSelectSingleidItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocShiftSelectSingleidItem_Result>("sprocShiftSelectSingleidItem", idParameter);
        }
    
        public virtual ObjectResult<sprocShiftSelectSingleItem_Result> sprocShiftSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocShiftSelectSingleItem_Result>("sprocShiftSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocUserInsertUpdateSingleItem(Nullable<int> id, string cUserName, string cModuleName, Nullable<int> nType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cUserNameParameter = cUserName != null ?
                new ObjectParameter("cUserName", cUserName) :
                new ObjectParameter("cUserName", typeof(string));
    
            var cModuleNameParameter = cModuleName != null ?
                new ObjectParameter("cModuleName", cModuleName) :
                new ObjectParameter("cModuleName", typeof(string));
    
            var nTypeParameter = nType.HasValue ?
                new ObjectParameter("nType", nType) :
                new ObjectParameter("nType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocUserInsertUpdateSingleItem", idParameter, cUserNameParameter, cModuleNameParameter, nTypeParameter);
        }
    
        public virtual int sprocWorkfromHomeApproveSingleItem(string cCardNumber, Nullable<System.DateTime> dtfromDate, Nullable<System.DateTime> dtToDate, string cStatus)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromDateParameter = dtfromDate.HasValue ?
                new ObjectParameter("dtfromDate", dtfromDate) :
                new ObjectParameter("dtfromDate", typeof(System.DateTime));
    
            var dtToDateParameter = dtToDate.HasValue ?
                new ObjectParameter("dtToDate", dtToDate) :
                new ObjectParameter("dtToDate", typeof(System.DateTime));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocWorkfromHomeApproveSingleItem", cCardNumberParameter, dtfromDateParameter, dtToDateParameter, cStatusParameter);
        }
    
        public virtual int sprocWorkfromHomeDeleteSingleItem(string cCardNumber, Nullable<System.DateTime> dtfromDate)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromDateParameter = dtfromDate.HasValue ?
                new ObjectParameter("dtfromDate", dtfromDate) :
                new ObjectParameter("dtfromDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocWorkfromHomeDeleteSingleItem", cCardNumberParameter, dtfromDateParameter);
        }
    
        public virtual ObjectResult<sprocWorkfromHomeSelectEmployeeList_Result> sprocWorkfromHomeSelectEmployeeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocWorkfromHomeSelectEmployeeList_Result>("sprocWorkfromHomeSelectEmployeeList");
        }
    
        public virtual ObjectResult<sprocWorkfromHomeSelectHodlist_Result> sprocWorkfromHomeSelectHodlist(string strcode, string emailid)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocWorkfromHomeSelectHodlist_Result>("sprocWorkfromHomeSelectHodlist", strcodeParameter, emailidParameter);
        }
    
        public virtual ObjectResult<sprocWorkfromHomeSelectSingleItem_Result> sprocWorkfromHomeSelectSingleItem(string strcode)
        {
            var strcodeParameter = strcode != null ?
                new ObjectParameter("strcode", strcode) :
                new ObjectParameter("strcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprocWorkfromHomeSelectSingleItem_Result>("sprocWorkfromHomeSelectSingleItem", strcodeParameter);
        }
    
        public virtual int sprocWorkfromHomeUpdateSingleItem(string cCardNumber, Nullable<System.DateTime> dtfromDate, Nullable<System.DateTime> dtToDate, string cStatus)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtfromDateParameter = dtfromDate.HasValue ?
                new ObjectParameter("dtfromDate", dtfromDate) :
                new ObjectParameter("dtfromDate", typeof(System.DateTime));
    
            var dtToDateParameter = dtToDate.HasValue ?
                new ObjectParameter("dtToDate", dtToDate) :
                new ObjectParameter("dtToDate", typeof(System.DateTime));
    
            var cStatusParameter = cStatus != null ?
                new ObjectParameter("cStatus", cStatus) :
                new ObjectParameter("cStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprocWorkfromHomeUpdateSingleItem", cCardNumberParameter, dtfromDateParameter, dtToDateParameter, cStatusParameter);
        }
    
        public virtual int test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("test");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> testdate(Nullable<System.DateTime> mydate)
        {
            var mydateParameter = mydate.HasValue ?
                new ObjectParameter("mydate", mydate) :
                new ObjectParameter("mydate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("testdate", mydateParameter);
        }
    
        public virtual int tmpLeaveBalanceTable(Nullable<System.DateTime> cyear, string cStat)
        {
            var cyearParameter = cyear.HasValue ?
                new ObjectParameter("cyear", cyear) :
                new ObjectParameter("cyear", typeof(System.DateTime));
    
            var cStatParameter = cStat != null ?
                new ObjectParameter("cStat", cStat) :
                new ObjectParameter("cStat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tmpLeaveBalanceTable", cyearParameter, cStatParameter);
        }
    
        public virtual int tmpLeaveBalanceUserTable(string cyear, string cStat, string cCardNumber1)
        {
            var cyearParameter = cyear != null ?
                new ObjectParameter("cyear", cyear) :
                new ObjectParameter("cyear", typeof(string));
    
            var cStatParameter = cStat != null ?
                new ObjectParameter("cStat", cStat) :
                new ObjectParameter("cStat", typeof(string));
    
            var cCardNumber1Parameter = cCardNumber1 != null ?
                new ObjectParameter("cCardNumber1", cCardNumber1) :
                new ObjectParameter("cCardNumber1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tmpLeaveBalanceUserTable", cyearParameter, cStatParameter, cCardNumber1Parameter);
        }
    
        public virtual int UPDATEEMPONSITE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATEEMPONSITE");
        }
    
        public virtual int WokHomeReportCategory(string cCategorycode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCategorycodeParameter = cCategorycode != null ?
                new ObjectParameter("cCategorycode", cCategorycode) :
                new ObjectParameter("cCategorycode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WokHomeReportCategory", cCategorycodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int WorkHomeReport(string cCardNumber, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cCardNumberParameter = cCardNumber != null ?
                new ObjectParameter("cCardNumber", cCardNumber) :
                new ObjectParameter("cCardNumber", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkHomeReport", cCardNumberParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int WorkHomeReportDepartment(string cDepartmentcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDepartmentcodeParameter = cDepartmentcode != null ?
                new ObjectParameter("cDepartmentcode", cDepartmentcode) :
                new ObjectParameter("cDepartmentcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkHomeReportDepartment", cDepartmentcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int WorkHomeReportDesignation(string cDesignationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDesignationcodeParameter = cDesignationcode != null ?
                new ObjectParameter("cDesignationcode", cDesignationcode) :
                new ObjectParameter("cDesignationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkHomeReportDesignation", cDesignationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int WorkHomeReportDivision(string cDivisioncode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var cDivisioncodeParameter = cDivisioncode != null ?
                new ObjectParameter("cDivisioncode", cDivisioncode) :
                new ObjectParameter("cDivisioncode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkHomeReportDivision", cDivisioncodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    
        public virtual int WorkHomeReportLocation(string clocationcode, string cCompanycode, Nullable<System.DateTime> dtFromdate, Nullable<System.DateTime> dtTodate, string cusername)
        {
            var clocationcodeParameter = clocationcode != null ?
                new ObjectParameter("clocationcode", clocationcode) :
                new ObjectParameter("clocationcode", typeof(string));
    
            var cCompanycodeParameter = cCompanycode != null ?
                new ObjectParameter("cCompanycode", cCompanycode) :
                new ObjectParameter("cCompanycode", typeof(string));
    
            var dtFromdateParameter = dtFromdate.HasValue ?
                new ObjectParameter("dtFromdate", dtFromdate) :
                new ObjectParameter("dtFromdate", typeof(System.DateTime));
    
            var dtTodateParameter = dtTodate.HasValue ?
                new ObjectParameter("dtTodate", dtTodate) :
                new ObjectParameter("dtTodate", typeof(System.DateTime));
    
            var cusernameParameter = cusername != null ?
                new ObjectParameter("cusername", cusername) :
                new ObjectParameter("cusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkHomeReportLocation", clocationcodeParameter, cCompanycodeParameter, dtFromdateParameter, dtTodateParameter, cusernameParameter);
        }
    }
}
