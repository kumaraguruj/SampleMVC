guru4ui/SampleMVC:
  PkgInclude:
   # - '*.zip'
    - WebApplication3/bin/*           
    - WebApplication3/Content/themes/base/*
    - WebApplication3/Content/themes/base/images/*
    - WebApplication3/Content/images/*
    - WebApplication3/Content/themes/*
    - WebApplication3/Content/*
    - WebApplication3/fonts/*
    - WebApplication3/Scripts/*
    - WebApplication3/Views/*
    - WebApplication3/Views/Home/*
    - WebApplication3/Views/Shared/*
    - WebApplication3/Views/_ViewStart.cshtml
    - WebApplication3/Views/Web.config
    - WebApplication3/favicon.ico
    - WebApplication3/Global.asax
    - WebApplication3/packages.config
    - WebApplication3/Web.config
    - WebApplication3/bin/roslyn/*
    
  Env:
    # Define the TCP port you want the IIS application to listen on
    - PORT: "8085"
    # Define the Name for the IIS application
    - SITE: SampleMVC
    # Define the Directory full path where the IIS application should reside
    - APPDIR: c:\WebApplication3
  PreInstall:
    - echo "Begin PreInstall"
    - echo "Install any IIS Prerequisites"
    - dism /enable-feature /online /featurename:IIS-WebServer /all
    - dism /enable-feature /online /featureName:IIS-ASP /all
    - dism /enable-feature /online /featureName:IIS-ASPNET /all    
    - dism /enable-feature /online /featureName:IIS-ASPNET45 /all
    - echo "---"
    - echo "Removing existing IIS Site"
    - for /F "tokens=*" %%a in ('%windir%\system32\inetsrv\appcmd list site %SITE%') do set RESPONSE=%%a
    - if "%RESPONSE%"=="" (
    -   echo "%SITE% doesn't exist"
    - ) else (
    -   echo "%SITE% does exist. Deleting"
    -   (%windir%\system32\inetsrv\appcmd delete site %SITE%)
    - )
    - echo "---"
    - echo "Removing existing App Pool"
    - for /F "tokens=*" %%a in ('%windir%\system32\inetsrv\appcmd list apppool %SITE%') do set RESPONSE=%%a
    - if "%RESPONSE%"=="" (
    -   echo "%SITE% doesn't exist"
    - ) else (
    -   echo "%SITE% does exist. Deleting"
    -   (%windir%\system32\inetsrv\appcmd delete apppool %SITE%)
    - )
    
    - echo "Create Application Directory"
    - rmdir /S/Q %APPDIR%
    - mkdir %APPDIR%
    - echo "---"
    - echo "Creating IIS Site"
    
    - (%windir%\system32\inetsrv\appcmd add site /name:%SITE% /physicalPath:%APPDIR% /bindings:http://*:%PORT%)   
    - (%windir%\system32\inetsrv\appcmd add apppool /name:%SITE% /managedRuntimeVersion:"v4.0" /managedPipelineMode:"Integrated")
    - echo "---"
    - echo "Done PreInstall"
  PostInstall:
    - echo "Begin PostInstall"
   # - echo "Unzip DAtest to Application Directory"
    # Using Powershell version 2
    # - PowerShell (New-Object -COM Shell.Application).NameSpace('"%APPDIR%"').CopyHere((New-Object -COM Shell.Application).NameSpace('"%DIStELLI_INSTALLHOME%\SampleMVC"').Items(), 1564);    
    #- powershell Copy-Item '"%DIStELLI_INSTALLHOME%\DAtest\*"' -Destination %APPDIR%
    - xcopy /C/E/Q/R/Y "%DIStELLI_INSTALLHOME%\WebApplication3\*" %APPDIR%
    
     # Using Powershell version 3+
    #- powershell add-type -assemblyname "system.io.compression.filesystem" ; [System.io.compression.zipfile]::ExtractToDirectory('"%DIStELLI_INSTALLHOME%\SampleMVC.zip"','"%APPDIR%"')
    - echo "---"
    - echo "Set Directory Attributes"
    - attrib -r %APPDIR% /s /d
    - icacls "%APPDIR%" /grant IIS_IUSRS:(OI)(CI)F /t
    - icacls "%APPDIR%" /grant IUSR:(OI)(CI)F /t
    - echo "---"
    - echo "Done PostInstall"
PostStart:
    - echo "PostStart"
    - publicip=$(curl -s ident.me)

    - echo "Starting Ghost Inspector tests"
    - results=$(curl -s "https://api.ghostinspector.com/v1/tests/5b27030efbf07203e3f2a46f/execute/?apiKey=aacb5f9ae714bcf0f434722bd33f5169e4b6c8da&startUrl=http://$publicip:$PORT/")

    - if [[ $(jq '.code' <<< $results) != "\"SUCCESS\"" ]]; then
    -   echo "Tests failed to run!"
    -   echo ""
    -   echo "$results"
    -   exit 1
    - fi
    - IFS=$'\n'
    - lines=$(jq '.' <<< $results)
    - passing=1
    - counter=0
    - for line in $lines; do
    -   printf "$counter "
    -   'if [[ "$line" =~ "\"passing\": false," || "$line" =~ "\"passing\": null," ]]; then'
    -     passing=0
    -     printf "***> "
    -   fi
    -   echo "$line"
    -   let counter=counter+1
    - done
    - if [ "$passing" -gt 0 ]; then
    -   echo "Ghost Inspector Integration tests PASSED SUCCESSFULLY!"
    - else
    -   echo "Ghost Inspector Integration tests FAILED!!!"
    - exit
    - fi
	- echo "Done PostStart123"

  Start:
    - echo "Begin Start"
    - echo "Start IIS Site"
    - (%windir%\system32\inetsrv\appcmd start site %SITE%)

    - echo "---"
    - echo "Open Firewall"
    - set FWNAME="%SITE% fw rule TCP Port %PORT%"
    - echo "Adding %FWNAME%"
    - netsh advfirewall firewall add rule name=%FWNAME% dir=in action=allow protocol=TCP localport=%PORT%
    - netsh advfirewall firewall delete rule name=%FWNAME%
    - netsh advfirewall firewall add rule name=%FWNAME% dir=in action=allow protocol=TCP localport=%PORT%
    - netsh advfirewall firewall add rule name=%FWNAME% dir=out action=allow protocol=TCP localport=%PORT%
    - echo "---"
    - echo "Done Start"